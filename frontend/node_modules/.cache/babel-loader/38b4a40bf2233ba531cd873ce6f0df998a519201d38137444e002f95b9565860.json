{"ast":null,"code":"import { QuestionIcon, IssueOpenedIcon, GitPullRequestIcon, IssueClosedIcon, SkipIcon, GitMergeIcon, IssueDraftIcon } from '@primer/octicons-react';\nimport React__default from 'react';\nimport styled from 'styled-components';\nimport { variant } from 'styled-system';\nimport { get } from '../constants.js';\nimport StyledOcticon from '../StyledOcticon.js';\nimport sx from '../sx.js';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nconst octiconMap = {\n  issueOpened: IssueOpenedIcon,\n  pullOpened: GitPullRequestIcon,\n  issueClosed: IssueClosedIcon,\n  issueClosedNotPlanned: SkipIcon,\n  pullClosed: GitPullRequestIcon,\n  pullMerged: GitMergeIcon,\n  draft: GitPullRequestIcon,\n  issueDraft: IssueDraftIcon\n};\nconst colorVariants = variant({\n  prop: 'status',\n  variants: {\n    issueClosed: {\n      backgroundColor: 'done.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    issueClosedNotPlanned: {\n      backgroundColor: 'neutral.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    pullClosed: {\n      backgroundColor: 'closed.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    pullMerged: {\n      backgroundColor: 'done.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    issueOpened: {\n      backgroundColor: 'open.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    pullOpened: {\n      backgroundColor: 'open.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    draft: {\n      backgroundColor: 'neutral.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    issueDraft: {\n      backgroundColor: 'neutral.emphasis',\n      color: 'fg.onEmphasis'\n    }\n  }\n});\nconst sizeVariants = variant({\n  prop: 'variant',\n  variants: {\n    small: {\n      paddingX: 2,\n      paddingY: 1,\n      fontSize: 0\n    },\n    normal: {\n      paddingX: '12px',\n      paddingY: 2,\n      fontSize: 1\n    }\n  }\n});\nconst StateLabelBase = styled.span.withConfig({\n  displayName: \"StateLabel__StateLabelBase\",\n  componentId: \"sc-qthdln-0\"\n})([\"display:inline-flex;align-items:center;font-weight:\", \";line-height:16px;color:\", \";text-align:center;border-radius:\", \";\", \";\", \";\", \";\"], get('fontWeights.bold'), get('colors.canvas.default'), get('radii.3'), colorVariants, sizeVariants, sx);\nfunction StateLabel(_ref) {\n  let {\n    children,\n    status,\n    variant: variantProp = 'normal',\n    ...rest\n  } = _ref;\n  const octiconProps = variantProp === 'small' ? {\n    width: '1em'\n  } : {};\n  return /*#__PURE__*/React__default.createElement(StateLabelBase, _extends({}, rest, {\n    variant: variantProp,\n    status: status\n  }), status && /*#__PURE__*/React__default.createElement(StyledOcticon, _extends({}, octiconProps, {\n    icon: octiconMap[status] || QuestionIcon,\n    sx: {\n      mr: 1\n    }\n  })), children);\n}\nStateLabel.displayName = \"StateLabel\";\nexport { StateLabel as default };","map":{"version":3,"names":["QuestionIcon","IssueOpenedIcon","GitPullRequestIcon","IssueClosedIcon","SkipIcon","GitMergeIcon","IssueDraftIcon","React__default","styled","variant","get","StyledOcticon","sx","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","octiconMap","issueOpened","pullOpened","issueClosed","issueClosedNotPlanned","pullClosed","pullMerged","draft","issueDraft","colorVariants","prop","variants","backgroundColor","color","sizeVariants","small","paddingX","paddingY","fontSize","normal","StateLabelBase","span","withConfig","displayName","componentId","StateLabel","_ref","children","status","variantProp","rest","octiconProps","width","createElement","icon","mr","default"],"sources":["/home/muneeb/assignment-krayo/frontend/node_modules/@primer/react/lib-esm/StateLabel/StateLabel.js"],"sourcesContent":["import { QuestionIcon, IssueOpenedIcon, GitPullRequestIcon, IssueClosedIcon, SkipIcon, GitMergeIcon, IssueDraftIcon } from '@primer/octicons-react';\nimport React__default from 'react';\nimport styled from 'styled-components';\nimport { variant } from 'styled-system';\nimport { get } from '../constants.js';\nimport StyledOcticon from '../StyledOcticon.js';\nimport sx from '../sx.js';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nconst octiconMap = {\n  issueOpened: IssueOpenedIcon,\n  pullOpened: GitPullRequestIcon,\n  issueClosed: IssueClosedIcon,\n  issueClosedNotPlanned: SkipIcon,\n  pullClosed: GitPullRequestIcon,\n  pullMerged: GitMergeIcon,\n  draft: GitPullRequestIcon,\n  issueDraft: IssueDraftIcon\n};\nconst colorVariants = variant({\n  prop: 'status',\n  variants: {\n    issueClosed: {\n      backgroundColor: 'done.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    issueClosedNotPlanned: {\n      backgroundColor: 'neutral.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    pullClosed: {\n      backgroundColor: 'closed.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    pullMerged: {\n      backgroundColor: 'done.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    issueOpened: {\n      backgroundColor: 'open.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    pullOpened: {\n      backgroundColor: 'open.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    draft: {\n      backgroundColor: 'neutral.emphasis',\n      color: 'fg.onEmphasis'\n    },\n    issueDraft: {\n      backgroundColor: 'neutral.emphasis',\n      color: 'fg.onEmphasis'\n    }\n  }\n});\nconst sizeVariants = variant({\n  prop: 'variant',\n  variants: {\n    small: {\n      paddingX: 2,\n      paddingY: 1,\n      fontSize: 0\n    },\n    normal: {\n      paddingX: '12px',\n      paddingY: 2,\n      fontSize: 1\n    }\n  }\n});\nconst StateLabelBase = styled.span.withConfig({\n  displayName: \"StateLabel__StateLabelBase\",\n  componentId: \"sc-qthdln-0\"\n})([\"display:inline-flex;align-items:center;font-weight:\", \";line-height:16px;color:\", \";text-align:center;border-radius:\", \";\", \";\", \";\", \";\"], get('fontWeights.bold'), get('colors.canvas.default'), get('radii.3'), colorVariants, sizeVariants, sx);\nfunction StateLabel({\n  children,\n  status,\n  variant: variantProp = 'normal',\n  ...rest\n}) {\n  const octiconProps = variantProp === 'small' ? {\n    width: '1em'\n  } : {};\n  return /*#__PURE__*/React__default.createElement(StateLabelBase, _extends({}, rest, {\n    variant: variantProp,\n    status: status\n  }), status && /*#__PURE__*/React__default.createElement(StyledOcticon, _extends({}, octiconProps, {\n    icon: octiconMap[status] || QuestionIcon,\n    sx: {\n      mr: 1\n    }\n  })), children);\n}\nStateLabel.displayName = \"StateLabel\";\n\nexport { StateLabel as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}