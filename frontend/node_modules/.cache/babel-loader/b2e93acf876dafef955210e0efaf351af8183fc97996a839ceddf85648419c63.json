{"ast":null,"code":"import { ChevronDownIcon, ChevronRightIcon, FileDirectoryOpenFillIcon, FileDirectoryFillIcon } from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport React__default from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { get } from '../constants.js';\nimport { ConfirmationDialog } from '../Dialog/ConfirmationDialog.js';\nimport { useControllableState } from '../hooks/useControllableState.js';\nimport { useId } from '../hooks/useId.js';\nimport useSafeTimeout from '../hooks/useSafeTimeout.js';\nimport sx from '../sx.js';\nimport Text from '../Text.js';\nimport createSlots from '../utils/create-slots.js';\nimport VisuallyHidden from '../_VisuallyHidden.js';\nimport { getAccessibleName } from './shared.js';\nimport { useRovingTabIndex, getFirstChildElement } from './useRovingTabIndex.js';\nimport { useTypeahead } from './useTypeahead.js';\nimport Spinner from '../Spinner/Spinner.js';\n\n// ----------------------------------------------------------------------------\n// Context\n\nconst RootContext = /*#__PURE__*/React__default.createContext({\n  announceUpdate: () => {},\n  expandedStateCache: {\n    current: new Map()\n  }\n});\nconst ItemContext = /*#__PURE__*/React__default.createContext({\n  itemId: '',\n  level: 1,\n  isSubTreeEmpty: false,\n  setIsSubTreeEmpty: () => {},\n  isExpanded: false,\n  setIsExpanded: () => {},\n  leadingVisualId: '',\n  trailingVisualId: ''\n});\n\n// ----------------------------------------------------------------------------\n// TreeView\n\nconst UlBox = styled.ul.withConfig({\n  displayName: \"TreeView__UlBox\",\n  componentId: \"sc-4ex6b6-0\"\n})([\"list-style:none;padding:0;margin:0;.PRIVATE_TreeView-item{outline:none;&:focus-visible > div,&.focus-visible > div{box-shadow:inset 0 0 0 2px \", \";@media (forced-colors:active){outline:2px solid HighlightText;outline-offset:-2;}}}.PRIVATE_TreeView-item-container{--level:1;--toggle-width:1rem;position:relative;display:grid;grid-template-columns:calc(calc(var(--level) - 1) * (var(--toggle-width) / 2)) var(--toggle-width) 1fr;grid-template-areas:'spacer toggle content';width:100%;min-height:2rem;font-size:\", \";color:\", \";border-radius:\", \";cursor:pointer;&:hover{background-color:\", \";@media (forced-colors:active){outline:2px solid transparent;outline-offset:-2px;}}@media (pointer:coarse){--toggle-width:1.5rem;min-height:2.75rem;}&:has(.PRIVATE_TreeView-item-skeleton):hover{background-color:transparent;cursor:default;@media (forced-colors:active){outline:none;}}}&[data-omit-spacer='true'] .PRIVATE_TreeView-item-container{grid-template-columns:0 0 1fr;}.PRIVATE_TreeView-item[aria-current='true'] > .PRIVATE_TreeView-item-container{background-color:\", \";&::after{content:'';position:absolute;top:calc(50% - 0.75rem);left:-\", \";width:0.25rem;height:1.5rem;background-color:\", \";border-radius:\", \";@media (forced-colors:active){background-color:HighlightText;}}}.PRIVATE_TreeView-item-toggle{grid-area:toggle;display:flex;align-items:center;justify-content:center;height:100%;color:\", \";}.PRIVATE_TreeView-item-toggle--hover:hover{background-color:\", \";}.PRIVATE_TreeView-item-toggle--end{border-top-left-radius:\", \";border-bottom-left-radius:\", \";}.PRIVATE_TreeView-item-content{grid-area:content;display:flex;align-items:center;height:100%;padding:0 \", \";gap:\", \";}.PRIVATE_TreeView-item-content-text{flex:1 1 auto;width:0;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;}.PRIVATE_TreeView-item-visual{display:flex;color:\", \";}.PRIVATE_TreeView-item-level-line{width:100%;height:100%;border-right:1px solid;border-color:\", \";}@media (hover:hover){.PRIVATE_TreeView-item-level-line{border-color:transparent;}&:hover .PRIVATE_TreeView-item-level-line,&:focus-within .PRIVATE_TreeView-item-level-line{border-color:\", \";}}.PRIVATE_TreeView-directory-icon{display:grid;color:\", \";}.PRIVATE_VisuallyHidden{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0;}\", \"\"], get(`colors.accent.fg`), get('fontSizes.1'), get('colors.fg.default'), get('radii.2'), get('colors.actionListItem.default.hoverBg'), get('colors.actionListItem.default.selectedBg'), get('space.2'), get('colors.accent.fg'), get('radii.2'), get('colors.fg.muted'), get('colors.treeViewItem.chevron.hoverBg'), get('radii.2'), get('radii.2'), get('space.2'), get('space.2'), get('colors.fg.muted'), get('colors.border.subtle'), get('colors.border.subtle'), get('colors.treeViewItem.directory.fill'), sx);\nconst Root = _ref2 => {\n  let {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    children,\n    flat\n  } = _ref2;\n  const containerRef = React__default.useRef(null);\n  const [ariaLiveMessage, setAriaLiveMessage] = React__default.useState('');\n  const announceUpdate = React__default.useCallback(message => {\n    setAriaLiveMessage(message);\n  }, []);\n  useRovingTabIndex({\n    containerRef\n  });\n  useTypeahead({\n    containerRef,\n    onFocusChange: element => {\n      if (element instanceof HTMLElement) {\n        element.focus();\n      }\n    }\n  });\n  const expandedStateCache = React__default.useRef(null);\n  if (expandedStateCache.current === null) {\n    expandedStateCache.current = new Map();\n  }\n  return /*#__PURE__*/React__default.createElement(RootContext.Provider, {\n    value: {\n      announceUpdate,\n      expandedStateCache\n    }\n  }, /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(VisuallyHidden, {\n    role: \"status\",\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\"\n  }, ariaLiveMessage), /*#__PURE__*/React__default.createElement(UlBox, {\n    ref: containerRef,\n    role: \"tree\",\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"data-omit-spacer\": flat\n  }, children)));\n};\nRoot.displayName = \"Root\";\nRoot.displayName = 'TreeView';\n\n// ----------------------------------------------------------------------------\n// TreeView.Item\n\nconst {\n  Slots,\n  Slot\n} = createSlots(['LeadingVisual', 'TrailingVisual']);\nconst Item = /*#__PURE__*/React__default.forwardRef((_ref3, ref) => {\n  let {\n    id: itemId,\n    containIntrinsicSize,\n    current: isCurrentItem = false,\n    defaultExpanded,\n    expanded,\n    onExpandedChange,\n    onSelect,\n    children\n  } = _ref3;\n  const {\n    expandedStateCache\n  } = React__default.useContext(RootContext);\n  const labelId = useId();\n  const leadingVisualId = useId();\n  const trailingVisualId = useId();\n  const [isExpanded, setIsExpanded] = useControllableState({\n    name: itemId,\n    // If the item was previously mounted, it's expanded state might be cached.\n    // We check the cache first, and then fall back to the defaultExpanded prop.\n    // If defaultExpanded is not provided, we default to false unless the item\n    // is the current item, in which case we default to true.\n    defaultValue: () => {\n      var _ref, _expandedStateCache$c, _expandedStateCache$c2;\n      return (_ref = (_expandedStateCache$c = (_expandedStateCache$c2 = expandedStateCache.current) === null || _expandedStateCache$c2 === void 0 ? void 0 : _expandedStateCache$c2.get(itemId)) !== null && _expandedStateCache$c !== void 0 ? _expandedStateCache$c : defaultExpanded) !== null && _ref !== void 0 ? _ref : isCurrentItem;\n    },\n    value: expanded,\n    onChange: onExpandedChange\n  });\n  const {\n    level\n  } = React__default.useContext(ItemContext);\n  const {\n    hasSubTree,\n    subTree,\n    childrenWithoutSubTree\n  } = useSubTree(children);\n  const [isSubTreeEmpty, setIsSubTreeEmpty] = React__default.useState(!hasSubTree);\n  const [isFocused, setIsFocused] = React__default.useState(false);\n\n  // Set the expanded state and cache it\n  const setIsExpandedWithCache = React__default.useCallback(newIsExpanded => {\n    var _expandedStateCache$c3;\n    setIsExpanded(newIsExpanded);\n    (_expandedStateCache$c3 = expandedStateCache.current) === null || _expandedStateCache$c3 === void 0 ? void 0 : _expandedStateCache$c3.set(itemId, newIsExpanded);\n  }, [itemId, setIsExpanded, expandedStateCache]);\n\n  // Expand or collapse the subtree\n  const toggle = React__default.useCallback(event => {\n    setIsExpandedWithCache(!isExpanded);\n    event === null || event === void 0 ? void 0 : event.stopPropagation();\n  }, [isExpanded, setIsExpandedWithCache]);\n  const handleKeyDown = React__default.useCallback(event => {\n    switch (event.key) {\n      case 'Enter':\n        if (onSelect) {\n          onSelect(event);\n        } else {\n          toggle(event);\n        }\n        break;\n      case 'ArrowRight':\n        event.preventDefault();\n        event.stopPropagation();\n        setIsExpandedWithCache(true);\n        break;\n      case 'ArrowLeft':\n        event.preventDefault();\n        event.stopPropagation();\n        setIsExpandedWithCache(false);\n        break;\n    }\n  }, [onSelect, setIsExpandedWithCache, toggle]);\n  return /*#__PURE__*/React__default.createElement(ItemContext.Provider, {\n    value: {\n      itemId,\n      level: level + 1,\n      isSubTreeEmpty,\n      setIsSubTreeEmpty,\n      isExpanded,\n      setIsExpanded: setIsExpandedWithCache,\n      leadingVisualId,\n      trailingVisualId\n    }\n  }, /*#__PURE__*/React__default.createElement(\"li\", {\n    className: \"PRIVATE_TreeView-item\",\n    ref: ref,\n    tabIndex: 0,\n    id: itemId,\n    role: \"treeitem\",\n    \"aria-labelledby\": labelId,\n    \"aria-describedby\": `${leadingVisualId} ${trailingVisualId}`,\n    \"aria-level\": level,\n    \"aria-expanded\": isSubTreeEmpty ? undefined : isExpanded,\n    \"aria-current\": isCurrentItem ? 'true' : undefined,\n    \"aria-selected\": isFocused ? 'true' : 'false',\n    onKeyDown: handleKeyDown,\n    onFocus: event => {\n      var _event$currentTarget$;\n      // Scroll the first child into view when the item receives focus\n      (_event$currentTarget$ = event.currentTarget.firstElementChild) === null || _event$currentTarget$ === void 0 ? void 0 : _event$currentTarget$.scrollIntoView({\n        block: 'nearest',\n        inline: 'nearest'\n      });\n\n      // Set the focused state\n      setIsFocused(true);\n\n      // Prevent focus event from bubbling up to parent items\n      event.stopPropagation();\n    },\n    onBlur: () => setIsFocused(false)\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"PRIVATE_TreeView-item-container\",\n    style: {\n      // @ts-ignore CSS custom property\n      '--level': level,\n      contentVisibility: containIntrinsicSize ? 'auto' : undefined,\n      containIntrinsicSize\n    },\n    onClick: event => {\n      if (onSelect) {\n        onSelect(event);\n      } else {\n        toggle(event);\n      }\n    },\n    onAuxClick: event => {\n      if (onSelect && event.button === 1) {\n        onSelect(event);\n      }\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    style: {\n      gridArea: 'spacer',\n      display: 'flex'\n    }\n  }, /*#__PURE__*/React__default.createElement(LevelIndicatorLines, {\n    level: level\n  })), hasSubTree ? /*#__PURE__*/\n  // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n  React__default.createElement(\"div\", {\n    className: classnames('PRIVATE_TreeView-item-toggle', onSelect && 'PRIVATE_TreeView-item-toggle--hover', level === 1 && 'PRIVATE_TreeView-item-toggle--end'),\n    onClick: event => {\n      if (onSelect) {\n        toggle(event);\n      }\n    }\n  }, isExpanded ? /*#__PURE__*/React__default.createElement(ChevronDownIcon, {\n    size: 12\n  }) : /*#__PURE__*/React__default.createElement(ChevronRightIcon, {\n    size: 12\n  })) : null, /*#__PURE__*/React__default.createElement(\"div\", {\n    id: labelId,\n    className: \"PRIVATE_TreeView-item-content\"\n  }, /*#__PURE__*/React__default.createElement(Slots, null, slots => /*#__PURE__*/React__default.createElement(React__default.Fragment, null, slots.LeadingVisual, /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"PRIVATE_TreeView-item-content-text\"\n  }, childrenWithoutSubTree), slots.TrailingVisual)))), subTree));\n});\n\n/** Lines to indicate the depth of an item in a TreeView */\nconst LevelIndicatorLines = _ref4 => {\n  let {\n    level\n  } = _ref4;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    style: {\n      width: '100%',\n      display: 'flex'\n    }\n  }, Array.from({\n    length: level - 1\n  }).map((_, index) => /*#__PURE__*/React__default.createElement(\"div\", {\n    key: index,\n    className: \"PRIVATE_TreeView-item-level-line\"\n  })));\n};\nLevelIndicatorLines.displayName = \"LevelIndicatorLines\";\nItem.displayName = 'TreeView.Item';\n\n// ----------------------------------------------------------------------------\n// TreeView.SubTree\n\nconst SubTree = _ref5 => {\n  let {\n    count,\n    state,\n    children\n  } = _ref5;\n  const {\n    announceUpdate\n  } = React__default.useContext(RootContext);\n  const {\n    itemId,\n    isExpanded,\n    isSubTreeEmpty,\n    setIsSubTreeEmpty\n  } = React__default.useContext(ItemContext);\n  const loadingItemRef = React__default.useRef(null);\n  const ref = React__default.useRef(null);\n  const [loadingFocused, setLoadingFocused] = React__default.useState(false);\n  const previousState = usePreviousValue(state);\n  const {\n    safeSetTimeout\n  } = useSafeTimeout();\n  React__default.useEffect(() => {\n    // If `state` is undefined, we're working in a synchronous context and need\n    // to detect if the sub-tree has content. If `state === 'done` then we're\n    // working in an asynchronous context and need to see if there is content\n    // that has been loaded in.\n    if (state === undefined || state === 'done') {\n      if (!isSubTreeEmpty && !children) {\n        setIsSubTreeEmpty(true);\n      } else if (isSubTreeEmpty && children) {\n        setIsSubTreeEmpty(false);\n      }\n    }\n  }, [state, isSubTreeEmpty, setIsSubTreeEmpty, children]);\n\n  // Handle transition from loading to done state\n  React__default.useEffect(() => {\n    if (previousState === 'loading' && state === 'done') {\n      var _ref$current;\n      const parentElement = document.getElementById(itemId);\n      if (!parentElement) return;\n\n      // Announce update to screen readers\n      const parentName = getAccessibleName(parentElement);\n      if ((_ref$current = ref.current) !== null && _ref$current !== void 0 && _ref$current.childElementCount) {\n        announceUpdate(`${parentName} content loaded`);\n      } else {\n        announceUpdate(`${parentName} is empty`);\n      }\n\n      // Move focus to the first child if the loading indicator\n      // was focused when the async items finished loading\n      if (loadingFocused) {\n        const firstChild = getFirstChildElement(parentElement);\n        if (firstChild) {\n          safeSetTimeout(() => {\n            firstChild.focus();\n          });\n        } else {\n          safeSetTimeout(() => {\n            parentElement.focus();\n          });\n        }\n        setLoadingFocused(false);\n      }\n    }\n  }, [loadingFocused, previousState, state, itemId, announceUpdate, ref, safeSetTimeout]);\n\n  // Track focus on the loading indicator\n  React__default.useEffect(() => {\n    function handleFocus() {\n      setLoadingFocused(true);\n    }\n    function handleBlur(event) {\n      // Skip blur events that are caused by the element being removed from the DOM.\n      // This can happen when the loading indicator is focused when async items are\n      // done loading and the loading indicator is removed from the DOM.\n      // If `loadingFocused` is `true` when `state` is `\"done\"` then the loading indicator\n      // was focused when the async items finished loading and we need to move focus to the\n      // first child.\n      if (!event.relatedTarget) return;\n      setLoadingFocused(false);\n    }\n    const loadingElement = loadingItemRef.current;\n    if (!loadingElement) return;\n    loadingElement.addEventListener('focus', handleFocus);\n    loadingElement.addEventListener('blur', handleBlur);\n    return () => {\n      loadingElement.removeEventListener('focus', handleFocus);\n      loadingElement.removeEventListener('blur', handleBlur);\n    };\n  }, [loadingItemRef, state]);\n  if (!isExpanded) {\n    return null;\n  }\n  return /*#__PURE__*/React__default.createElement(\"ul\", {\n    role: \"group\",\n    style: {\n      listStyle: 'none',\n      padding: 0,\n      margin: 0\n    }\n    // @ts-ignore Box doesn't have type support for `ref` used in combination with `as`\n    ,\n\n    ref: ref\n  }, state === 'loading' ? /*#__PURE__*/React__default.createElement(LoadingItem, {\n    ref: loadingItemRef,\n    count: count\n  }) : children);\n};\nSubTree.displayName = \"SubTree\";\nSubTree.displayName = 'TreeView.SubTree';\nfunction usePreviousValue(value) {\n  const ref = React__default.useRef(value);\n  React__default.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\nconst shimmer = keyframes([\"from{mask-position:200%;}to{mask-position:0%;}\"]);\nconst SkeletonItem = styled.span.attrs({\n  className: 'PRIVATE_TreeView-item-skeleton'\n}).withConfig({\n  displayName: \"TreeView__SkeletonItem\",\n  componentId: \"sc-4ex6b6-1\"\n})([\"display:flex;align-items:center;column-gap:0.5rem;height:2rem;@media (pointer:coarse){height:2.75rem;}@media (prefers-reduced-motion:no-preference){mask-image:linear-gradient(75deg,#000 30%,rgba(0,0,0,0.65) 80%);mask-size:200%;animation:\", \";animation-duration:1s;animation-iteration-count:infinite;}&::before{content:'';display:block;width:1rem;height:1rem;background-color:\", \";border-radius:3px;@media (forced-colors:active){outline:1px solid transparent;outline-offset:-1px;}}&::after{content:'';display:block;width:var(--tree-item-loading-width,67%);height:1rem;background-color:\", \";border-radius:3px;@media (forced-colors:active){outline:1px solid transparent;outline-offset:-1px;}}&:nth-of-type(5n + 1){--tree-item-loading-width:67%;}&:nth-of-type(5n + 2){--tree-item-loading-width:47%;}&:nth-of-type(5n + 3){--tree-item-loading-width:73%;}&:nth-of-type(5n + 4){--tree-item-loading-width:64%;}&:nth-of-type(5n + 5){--tree-item-loading-width:50%;}\"], shimmer, get('colors.neutral.subtle'), get('colors.neutral.subtle'));\nconst LoadingItem = /*#__PURE__*/React__default.forwardRef((_ref6, ref) => {\n  let {\n    count\n  } = _ref6;\n  const itemId = useId();\n  if (count) {\n    return /*#__PURE__*/React__default.createElement(Item, {\n      id: itemId,\n      ref: ref\n    }, Array.from({\n      length: count\n    }).map((_, i) => {\n      return /*#__PURE__*/React__default.createElement(SkeletonItem, {\n        \"aria-hidden\": true,\n        key: i\n      });\n    }), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"PRIVATE_VisuallyHidden\"\n    }, \"Loading \", count, \" items\"));\n  }\n  return /*#__PURE__*/React__default.createElement(Item, {\n    id: itemId,\n    ref: ref\n  }, /*#__PURE__*/React__default.createElement(LeadingVisual, null, /*#__PURE__*/React__default.createElement(Spinner, {\n    size: \"small\"\n  })), /*#__PURE__*/React__default.createElement(Text, {\n    sx: {\n      color: 'fg.muted'\n    }\n  }, \"Loading...\"));\n});\nfunction useSubTree(children) {\n  return React__default.useMemo(() => {\n    const subTree = React__default.Children.toArray(children).find(child => /*#__PURE__*/React__default.isValidElement(child) && child.type === SubTree);\n    const childrenWithoutSubTree = React__default.Children.toArray(children).filter(child => !( /*#__PURE__*/React__default.isValidElement(child) && child.type === SubTree));\n    return {\n      subTree,\n      childrenWithoutSubTree,\n      hasSubTree: Boolean(subTree)\n    };\n  }, [children]);\n}\n\n// ----------------------------------------------------------------------------\n// TreeView.LeadingVisual and TreeView.TrailingVisual\n\nconst LeadingVisual = props => {\n  const {\n    isExpanded,\n    leadingVisualId\n  } = React__default.useContext(ItemContext);\n  const children = typeof props.children === 'function' ? props.children({\n    isExpanded\n  }) : props.children;\n  return /*#__PURE__*/React__default.createElement(Slot, {\n    name: \"LeadingVisual\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"PRIVATE_VisuallyHidden\",\n    \"aria-hidden\": true,\n    id: leadingVisualId\n  }, props.label), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"PRIVATE_TreeView-item-visual\",\n    \"aria-hidden\": true\n  }, children));\n};\nLeadingVisual.displayName = \"LeadingVisual\";\nLeadingVisual.displayName = 'TreeView.LeadingVisual';\nconst TrailingVisual = props => {\n  const {\n    isExpanded,\n    trailingVisualId\n  } = React__default.useContext(ItemContext);\n  const children = typeof props.children === 'function' ? props.children({\n    isExpanded\n  }) : props.children;\n  return /*#__PURE__*/React__default.createElement(Slot, {\n    name: \"TrailingVisual\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"PRIVATE_VisuallyHidden\",\n    \"aria-hidden\": true,\n    id: trailingVisualId\n  }, props.label), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"PRIVATE_TreeView-item-visual\",\n    \"aria-hidden\": true\n  }, children));\n};\nTrailingVisual.displayName = \"TrailingVisual\";\nTrailingVisual.displayName = 'TreeView.TrailingVisual';\n\n// ----------------------------------------------------------------------------\n// TreeView.DirectoryIcon\n\nconst DirectoryIcon = () => {\n  const {\n    isExpanded\n  } = React__default.useContext(ItemContext);\n  const Icon = isExpanded ? FileDirectoryOpenFillIcon : FileDirectoryFillIcon;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"PRIVATE_TreeView-directory-icon\"\n  }, /*#__PURE__*/React__default.createElement(Icon, null));\n};\nDirectoryIcon.displayName = \"DirectoryIcon\";\nconst ErrorDialog = _ref7 => {\n  let {\n    title = 'Error',\n    children,\n    onRetry,\n    onDismiss\n  } = _ref7;\n  const {\n    itemId,\n    setIsExpanded\n  } = React__default.useContext(ItemContext);\n  return /*#__PURE__*/(\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    React__default.createElement(\"div\", {\n      onKeyDown: event => {\n        if (['Backspace', 'ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown', 'Enter'].includes(event.key)) {\n          // Prevent keyboard events from bubbling up to the TreeView\n          // and interfering with keyboard navigation\n          event.stopPropagation();\n        }\n      }\n    }, /*#__PURE__*/React__default.createElement(ConfirmationDialog, {\n      title: title,\n      onClose: gesture => {\n        // Focus parent item after the dialog is closed\n        setTimeout(() => {\n          const parentElement = document.getElementById(itemId);\n          parentElement === null || parentElement === void 0 ? void 0 : parentElement.focus();\n        });\n        if (gesture === 'confirm') {\n          onRetry === null || onRetry === void 0 ? void 0 : onRetry();\n        } else {\n          setIsExpanded(false);\n          onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss();\n        }\n      },\n      confirmButtonContent: \"Retry\",\n      cancelButtonContent: \"Dismiss\"\n    }, children))\n  );\n};\nErrorDialog.displayName = \"ErrorDialog\";\nErrorDialog.displayName = 'TreeView.ErrorDialog';\n\n// ----------------------------------------------------------------------------\n// Export\n\nconst TreeView = Object.assign(Root, {\n  Item,\n  SubTree,\n  LeadingVisual,\n  TrailingVisual,\n  DirectoryIcon,\n  ErrorDialog\n});\nexport { TreeView };","map":{"version":3,"names":["ChevronDownIcon","ChevronRightIcon","FileDirectoryOpenFillIcon","FileDirectoryFillIcon","classnames","React__default","styled","keyframes","get","ConfirmationDialog","useControllableState","useId","useSafeTimeout","sx","Text","createSlots","VisuallyHidden","getAccessibleName","useRovingTabIndex","getFirstChildElement","useTypeahead","Spinner","RootContext","createContext","announceUpdate","expandedStateCache","current","Map","ItemContext","itemId","level","isSubTreeEmpty","setIsSubTreeEmpty","isExpanded","setIsExpanded","leadingVisualId","trailingVisualId","UlBox","ul","withConfig","displayName","componentId","Root","_ref2","ariaLabel","ariaLabelledby","children","flat","containerRef","useRef","ariaLiveMessage","setAriaLiveMessage","useState","useCallback","message","onFocusChange","element","HTMLElement","focus","createElement","Provider","value","Fragment","role","ref","Slots","Slot","Item","forwardRef","_ref3","id","containIntrinsicSize","isCurrentItem","defaultExpanded","expanded","onExpandedChange","onSelect","useContext","labelId","name","defaultValue","_ref","_expandedStateCache$c","_expandedStateCache$c2","onChange","hasSubTree","subTree","childrenWithoutSubTree","useSubTree","isFocused","setIsFocused","setIsExpandedWithCache","newIsExpanded","_expandedStateCache$c3","set","toggle","event","stopPropagation","handleKeyDown","key","preventDefault","className","tabIndex","undefined","onKeyDown","onFocus","_event$currentTarget$","currentTarget","firstElementChild","scrollIntoView","block","inline","onBlur","style","contentVisibility","onClick","onAuxClick","button","gridArea","display","LevelIndicatorLines","size","slots","LeadingVisual","TrailingVisual","_ref4","width","Array","from","length","map","_","index","SubTree","_ref5","count","state","loadingItemRef","loadingFocused","setLoadingFocused","previousState","usePreviousValue","safeSetTimeout","useEffect","_ref$current","parentElement","document","getElementById","parentName","childElementCount","firstChild","handleFocus","handleBlur","relatedTarget","loadingElement","addEventListener","removeEventListener","listStyle","padding","margin","LoadingItem","shimmer","SkeletonItem","span","attrs","_ref6","i","color","useMemo","Children","toArray","find","child","isValidElement","type","filter","Boolean","props","label","DirectoryIcon","Icon","ErrorDialog","_ref7","title","onRetry","onDismiss","includes","onClose","gesture","setTimeout","confirmButtonContent","cancelButtonContent","TreeView","Object","assign"],"sources":["/home/muneeb/assignment-krayo/frontend/node_modules/@primer/react/lib-esm/TreeView/TreeView.js"],"sourcesContent":["import { ChevronDownIcon, ChevronRightIcon, FileDirectoryOpenFillIcon, FileDirectoryFillIcon } from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport React__default from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { get } from '../constants.js';\nimport { ConfirmationDialog } from '../Dialog/ConfirmationDialog.js';\nimport { useControllableState } from '../hooks/useControllableState.js';\nimport { useId } from '../hooks/useId.js';\nimport useSafeTimeout from '../hooks/useSafeTimeout.js';\nimport sx from '../sx.js';\nimport Text from '../Text.js';\nimport createSlots from '../utils/create-slots.js';\nimport VisuallyHidden from '../_VisuallyHidden.js';\nimport { getAccessibleName } from './shared.js';\nimport { useRovingTabIndex, getFirstChildElement } from './useRovingTabIndex.js';\nimport { useTypeahead } from './useTypeahead.js';\nimport Spinner from '../Spinner/Spinner.js';\n\n// ----------------------------------------------------------------------------\n// Context\n\nconst RootContext = /*#__PURE__*/React__default.createContext({\n  announceUpdate: () => {},\n  expandedStateCache: {\n    current: new Map()\n  }\n});\nconst ItemContext = /*#__PURE__*/React__default.createContext({\n  itemId: '',\n  level: 1,\n  isSubTreeEmpty: false,\n  setIsSubTreeEmpty: () => {},\n  isExpanded: false,\n  setIsExpanded: () => {},\n  leadingVisualId: '',\n  trailingVisualId: ''\n});\n\n// ----------------------------------------------------------------------------\n// TreeView\n\nconst UlBox = styled.ul.withConfig({\n  displayName: \"TreeView__UlBox\",\n  componentId: \"sc-4ex6b6-0\"\n})([\"list-style:none;padding:0;margin:0;.PRIVATE_TreeView-item{outline:none;&:focus-visible > div,&.focus-visible > div{box-shadow:inset 0 0 0 2px \", \";@media (forced-colors:active){outline:2px solid HighlightText;outline-offset:-2;}}}.PRIVATE_TreeView-item-container{--level:1;--toggle-width:1rem;position:relative;display:grid;grid-template-columns:calc(calc(var(--level) - 1) * (var(--toggle-width) / 2)) var(--toggle-width) 1fr;grid-template-areas:'spacer toggle content';width:100%;min-height:2rem;font-size:\", \";color:\", \";border-radius:\", \";cursor:pointer;&:hover{background-color:\", \";@media (forced-colors:active){outline:2px solid transparent;outline-offset:-2px;}}@media (pointer:coarse){--toggle-width:1.5rem;min-height:2.75rem;}&:has(.PRIVATE_TreeView-item-skeleton):hover{background-color:transparent;cursor:default;@media (forced-colors:active){outline:none;}}}&[data-omit-spacer='true'] .PRIVATE_TreeView-item-container{grid-template-columns:0 0 1fr;}.PRIVATE_TreeView-item[aria-current='true'] > .PRIVATE_TreeView-item-container{background-color:\", \";&::after{content:'';position:absolute;top:calc(50% - 0.75rem);left:-\", \";width:0.25rem;height:1.5rem;background-color:\", \";border-radius:\", \";@media (forced-colors:active){background-color:HighlightText;}}}.PRIVATE_TreeView-item-toggle{grid-area:toggle;display:flex;align-items:center;justify-content:center;height:100%;color:\", \";}.PRIVATE_TreeView-item-toggle--hover:hover{background-color:\", \";}.PRIVATE_TreeView-item-toggle--end{border-top-left-radius:\", \";border-bottom-left-radius:\", \";}.PRIVATE_TreeView-item-content{grid-area:content;display:flex;align-items:center;height:100%;padding:0 \", \";gap:\", \";}.PRIVATE_TreeView-item-content-text{flex:1 1 auto;width:0;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;}.PRIVATE_TreeView-item-visual{display:flex;color:\", \";}.PRIVATE_TreeView-item-level-line{width:100%;height:100%;border-right:1px solid;border-color:\", \";}@media (hover:hover){.PRIVATE_TreeView-item-level-line{border-color:transparent;}&:hover .PRIVATE_TreeView-item-level-line,&:focus-within .PRIVATE_TreeView-item-level-line{border-color:\", \";}}.PRIVATE_TreeView-directory-icon{display:grid;color:\", \";}.PRIVATE_VisuallyHidden{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0;}\", \"\"], get(`colors.accent.fg`), get('fontSizes.1'), get('colors.fg.default'), get('radii.2'), get('colors.actionListItem.default.hoverBg'), get('colors.actionListItem.default.selectedBg'), get('space.2'), get('colors.accent.fg'), get('radii.2'), get('colors.fg.muted'), get('colors.treeViewItem.chevron.hoverBg'), get('radii.2'), get('radii.2'), get('space.2'), get('space.2'), get('colors.fg.muted'), get('colors.border.subtle'), get('colors.border.subtle'), get('colors.treeViewItem.directory.fill'), sx);\nconst Root = ({\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledby,\n  children,\n  flat\n}) => {\n  const containerRef = React__default.useRef(null);\n  const [ariaLiveMessage, setAriaLiveMessage] = React__default.useState('');\n  const announceUpdate = React__default.useCallback(message => {\n    setAriaLiveMessage(message);\n  }, []);\n  useRovingTabIndex({\n    containerRef\n  });\n  useTypeahead({\n    containerRef,\n    onFocusChange: element => {\n      if (element instanceof HTMLElement) {\n        element.focus();\n      }\n    }\n  });\n  const expandedStateCache = React__default.useRef(null);\n  if (expandedStateCache.current === null) {\n    expandedStateCache.current = new Map();\n  }\n  return /*#__PURE__*/React__default.createElement(RootContext.Provider, {\n    value: {\n      announceUpdate,\n      expandedStateCache\n    }\n  }, /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(VisuallyHidden, {\n    role: \"status\",\n    \"aria-live\": \"polite\",\n    \"aria-atomic\": \"true\"\n  }, ariaLiveMessage), /*#__PURE__*/React__default.createElement(UlBox, {\n    ref: containerRef,\n    role: \"tree\",\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"data-omit-spacer\": flat\n  }, children)));\n};\nRoot.displayName = \"Root\";\nRoot.displayName = 'TreeView';\n\n// ----------------------------------------------------------------------------\n// TreeView.Item\n\nconst {\n  Slots,\n  Slot\n} = createSlots(['LeadingVisual', 'TrailingVisual']);\nconst Item = /*#__PURE__*/React__default.forwardRef(({\n  id: itemId,\n  containIntrinsicSize,\n  current: isCurrentItem = false,\n  defaultExpanded,\n  expanded,\n  onExpandedChange,\n  onSelect,\n  children\n}, ref) => {\n  const {\n    expandedStateCache\n  } = React__default.useContext(RootContext);\n  const labelId = useId();\n  const leadingVisualId = useId();\n  const trailingVisualId = useId();\n  const [isExpanded, setIsExpanded] = useControllableState({\n    name: itemId,\n    // If the item was previously mounted, it's expanded state might be cached.\n    // We check the cache first, and then fall back to the defaultExpanded prop.\n    // If defaultExpanded is not provided, we default to false unless the item\n    // is the current item, in which case we default to true.\n    defaultValue: () => {\n      var _ref, _expandedStateCache$c, _expandedStateCache$c2;\n      return (_ref = (_expandedStateCache$c = (_expandedStateCache$c2 = expandedStateCache.current) === null || _expandedStateCache$c2 === void 0 ? void 0 : _expandedStateCache$c2.get(itemId)) !== null && _expandedStateCache$c !== void 0 ? _expandedStateCache$c : defaultExpanded) !== null && _ref !== void 0 ? _ref : isCurrentItem;\n    },\n    value: expanded,\n    onChange: onExpandedChange\n  });\n  const {\n    level\n  } = React__default.useContext(ItemContext);\n  const {\n    hasSubTree,\n    subTree,\n    childrenWithoutSubTree\n  } = useSubTree(children);\n  const [isSubTreeEmpty, setIsSubTreeEmpty] = React__default.useState(!hasSubTree);\n  const [isFocused, setIsFocused] = React__default.useState(false);\n\n  // Set the expanded state and cache it\n  const setIsExpandedWithCache = React__default.useCallback(newIsExpanded => {\n    var _expandedStateCache$c3;\n    setIsExpanded(newIsExpanded);\n    (_expandedStateCache$c3 = expandedStateCache.current) === null || _expandedStateCache$c3 === void 0 ? void 0 : _expandedStateCache$c3.set(itemId, newIsExpanded);\n  }, [itemId, setIsExpanded, expandedStateCache]);\n\n  // Expand or collapse the subtree\n  const toggle = React__default.useCallback(event => {\n    setIsExpandedWithCache(!isExpanded);\n    event === null || event === void 0 ? void 0 : event.stopPropagation();\n  }, [isExpanded, setIsExpandedWithCache]);\n  const handleKeyDown = React__default.useCallback(event => {\n    switch (event.key) {\n      case 'Enter':\n        if (onSelect) {\n          onSelect(event);\n        } else {\n          toggle(event);\n        }\n        break;\n      case 'ArrowRight':\n        event.preventDefault();\n        event.stopPropagation();\n        setIsExpandedWithCache(true);\n        break;\n      case 'ArrowLeft':\n        event.preventDefault();\n        event.stopPropagation();\n        setIsExpandedWithCache(false);\n        break;\n    }\n  }, [onSelect, setIsExpandedWithCache, toggle]);\n  return /*#__PURE__*/React__default.createElement(ItemContext.Provider, {\n    value: {\n      itemId,\n      level: level + 1,\n      isSubTreeEmpty,\n      setIsSubTreeEmpty,\n      isExpanded,\n      setIsExpanded: setIsExpandedWithCache,\n      leadingVisualId,\n      trailingVisualId\n    }\n  }, /*#__PURE__*/React__default.createElement(\"li\", {\n    className: \"PRIVATE_TreeView-item\",\n    ref: ref,\n    tabIndex: 0,\n    id: itemId,\n    role: \"treeitem\",\n    \"aria-labelledby\": labelId,\n    \"aria-describedby\": `${leadingVisualId} ${trailingVisualId}`,\n    \"aria-level\": level,\n    \"aria-expanded\": isSubTreeEmpty ? undefined : isExpanded,\n    \"aria-current\": isCurrentItem ? 'true' : undefined,\n    \"aria-selected\": isFocused ? 'true' : 'false',\n    onKeyDown: handleKeyDown,\n    onFocus: event => {\n      var _event$currentTarget$;\n      // Scroll the first child into view when the item receives focus\n      (_event$currentTarget$ = event.currentTarget.firstElementChild) === null || _event$currentTarget$ === void 0 ? void 0 : _event$currentTarget$.scrollIntoView({\n        block: 'nearest',\n        inline: 'nearest'\n      });\n\n      // Set the focused state\n      setIsFocused(true);\n\n      // Prevent focus event from bubbling up to parent items\n      event.stopPropagation();\n    },\n    onBlur: () => setIsFocused(false)\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"PRIVATE_TreeView-item-container\",\n    style: {\n      // @ts-ignore CSS custom property\n      '--level': level,\n      contentVisibility: containIntrinsicSize ? 'auto' : undefined,\n      containIntrinsicSize\n    },\n    onClick: event => {\n      if (onSelect) {\n        onSelect(event);\n      } else {\n        toggle(event);\n      }\n    },\n    onAuxClick: event => {\n      if (onSelect && event.button === 1) {\n        onSelect(event);\n      }\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    style: {\n      gridArea: 'spacer',\n      display: 'flex'\n    }\n  }, /*#__PURE__*/React__default.createElement(LevelIndicatorLines, {\n    level: level\n  })), hasSubTree ?\n  /*#__PURE__*/\n  // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n  React__default.createElement(\"div\", {\n    className: classnames('PRIVATE_TreeView-item-toggle', onSelect && 'PRIVATE_TreeView-item-toggle--hover', level === 1 && 'PRIVATE_TreeView-item-toggle--end'),\n    onClick: event => {\n      if (onSelect) {\n        toggle(event);\n      }\n    }\n  }, isExpanded ? /*#__PURE__*/React__default.createElement(ChevronDownIcon, {\n    size: 12\n  }) : /*#__PURE__*/React__default.createElement(ChevronRightIcon, {\n    size: 12\n  })) : null, /*#__PURE__*/React__default.createElement(\"div\", {\n    id: labelId,\n    className: \"PRIVATE_TreeView-item-content\"\n  }, /*#__PURE__*/React__default.createElement(Slots, null, slots => /*#__PURE__*/React__default.createElement(React__default.Fragment, null, slots.LeadingVisual, /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"PRIVATE_TreeView-item-content-text\"\n  }, childrenWithoutSubTree), slots.TrailingVisual)))), subTree));\n});\n\n/** Lines to indicate the depth of an item in a TreeView */\nconst LevelIndicatorLines = ({\n  level\n}) => {\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    style: {\n      width: '100%',\n      display: 'flex'\n    }\n  }, Array.from({\n    length: level - 1\n  }).map((_, index) => /*#__PURE__*/React__default.createElement(\"div\", {\n    key: index,\n    className: \"PRIVATE_TreeView-item-level-line\"\n  })));\n};\nLevelIndicatorLines.displayName = \"LevelIndicatorLines\";\nItem.displayName = 'TreeView.Item';\n\n// ----------------------------------------------------------------------------\n// TreeView.SubTree\n\nconst SubTree = ({\n  count,\n  state,\n  children\n}) => {\n  const {\n    announceUpdate\n  } = React__default.useContext(RootContext);\n  const {\n    itemId,\n    isExpanded,\n    isSubTreeEmpty,\n    setIsSubTreeEmpty\n  } = React__default.useContext(ItemContext);\n  const loadingItemRef = React__default.useRef(null);\n  const ref = React__default.useRef(null);\n  const [loadingFocused, setLoadingFocused] = React__default.useState(false);\n  const previousState = usePreviousValue(state);\n  const {\n    safeSetTimeout\n  } = useSafeTimeout();\n  React__default.useEffect(() => {\n    // If `state` is undefined, we're working in a synchronous context and need\n    // to detect if the sub-tree has content. If `state === 'done` then we're\n    // working in an asynchronous context and need to see if there is content\n    // that has been loaded in.\n    if (state === undefined || state === 'done') {\n      if (!isSubTreeEmpty && !children) {\n        setIsSubTreeEmpty(true);\n      } else if (isSubTreeEmpty && children) {\n        setIsSubTreeEmpty(false);\n      }\n    }\n  }, [state, isSubTreeEmpty, setIsSubTreeEmpty, children]);\n\n  // Handle transition from loading to done state\n  React__default.useEffect(() => {\n    if (previousState === 'loading' && state === 'done') {\n      var _ref$current;\n      const parentElement = document.getElementById(itemId);\n      if (!parentElement) return;\n\n      // Announce update to screen readers\n      const parentName = getAccessibleName(parentElement);\n      if ((_ref$current = ref.current) !== null && _ref$current !== void 0 && _ref$current.childElementCount) {\n        announceUpdate(`${parentName} content loaded`);\n      } else {\n        announceUpdate(`${parentName} is empty`);\n      }\n\n      // Move focus to the first child if the loading indicator\n      // was focused when the async items finished loading\n      if (loadingFocused) {\n        const firstChild = getFirstChildElement(parentElement);\n        if (firstChild) {\n          safeSetTimeout(() => {\n            firstChild.focus();\n          });\n        } else {\n          safeSetTimeout(() => {\n            parentElement.focus();\n          });\n        }\n        setLoadingFocused(false);\n      }\n    }\n  }, [loadingFocused, previousState, state, itemId, announceUpdate, ref, safeSetTimeout]);\n\n  // Track focus on the loading indicator\n  React__default.useEffect(() => {\n    function handleFocus() {\n      setLoadingFocused(true);\n    }\n    function handleBlur(event) {\n      // Skip blur events that are caused by the element being removed from the DOM.\n      // This can happen when the loading indicator is focused when async items are\n      // done loading and the loading indicator is removed from the DOM.\n      // If `loadingFocused` is `true` when `state` is `\"done\"` then the loading indicator\n      // was focused when the async items finished loading and we need to move focus to the\n      // first child.\n      if (!event.relatedTarget) return;\n      setLoadingFocused(false);\n    }\n    const loadingElement = loadingItemRef.current;\n    if (!loadingElement) return;\n    loadingElement.addEventListener('focus', handleFocus);\n    loadingElement.addEventListener('blur', handleBlur);\n    return () => {\n      loadingElement.removeEventListener('focus', handleFocus);\n      loadingElement.removeEventListener('blur', handleBlur);\n    };\n  }, [loadingItemRef, state]);\n  if (!isExpanded) {\n    return null;\n  }\n  return /*#__PURE__*/React__default.createElement(\"ul\", {\n    role: \"group\",\n    style: {\n      listStyle: 'none',\n      padding: 0,\n      margin: 0\n    }\n    // @ts-ignore Box doesn't have type support for `ref` used in combination with `as`\n    ,\n    ref: ref\n  }, state === 'loading' ? /*#__PURE__*/React__default.createElement(LoadingItem, {\n    ref: loadingItemRef,\n    count: count\n  }) : children);\n};\nSubTree.displayName = \"SubTree\";\nSubTree.displayName = 'TreeView.SubTree';\nfunction usePreviousValue(value) {\n  const ref = React__default.useRef(value);\n  React__default.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\nconst shimmer = keyframes([\"from{mask-position:200%;}to{mask-position:0%;}\"]);\nconst SkeletonItem = styled.span.attrs({\n  className: 'PRIVATE_TreeView-item-skeleton'\n}).withConfig({\n  displayName: \"TreeView__SkeletonItem\",\n  componentId: \"sc-4ex6b6-1\"\n})([\"display:flex;align-items:center;column-gap:0.5rem;height:2rem;@media (pointer:coarse){height:2.75rem;}@media (prefers-reduced-motion:no-preference){mask-image:linear-gradient(75deg,#000 30%,rgba(0,0,0,0.65) 80%);mask-size:200%;animation:\", \";animation-duration:1s;animation-iteration-count:infinite;}&::before{content:'';display:block;width:1rem;height:1rem;background-color:\", \";border-radius:3px;@media (forced-colors:active){outline:1px solid transparent;outline-offset:-1px;}}&::after{content:'';display:block;width:var(--tree-item-loading-width,67%);height:1rem;background-color:\", \";border-radius:3px;@media (forced-colors:active){outline:1px solid transparent;outline-offset:-1px;}}&:nth-of-type(5n + 1){--tree-item-loading-width:67%;}&:nth-of-type(5n + 2){--tree-item-loading-width:47%;}&:nth-of-type(5n + 3){--tree-item-loading-width:73%;}&:nth-of-type(5n + 4){--tree-item-loading-width:64%;}&:nth-of-type(5n + 5){--tree-item-loading-width:50%;}\"], shimmer, get('colors.neutral.subtle'), get('colors.neutral.subtle'));\nconst LoadingItem = /*#__PURE__*/React__default.forwardRef(({\n  count\n}, ref) => {\n  const itemId = useId();\n  if (count) {\n    return /*#__PURE__*/React__default.createElement(Item, {\n      id: itemId,\n      ref: ref\n    }, Array.from({\n      length: count\n    }).map((_, i) => {\n      return /*#__PURE__*/React__default.createElement(SkeletonItem, {\n        \"aria-hidden\": true,\n        key: i\n      });\n    }), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: \"PRIVATE_VisuallyHidden\"\n    }, \"Loading \", count, \" items\"));\n  }\n  return /*#__PURE__*/React__default.createElement(Item, {\n    id: itemId,\n    ref: ref\n  }, /*#__PURE__*/React__default.createElement(LeadingVisual, null, /*#__PURE__*/React__default.createElement(Spinner, {\n    size: \"small\"\n  })), /*#__PURE__*/React__default.createElement(Text, {\n    sx: {\n      color: 'fg.muted'\n    }\n  }, \"Loading...\"));\n});\nfunction useSubTree(children) {\n  return React__default.useMemo(() => {\n    const subTree = React__default.Children.toArray(children).find(child => /*#__PURE__*/React__default.isValidElement(child) && child.type === SubTree);\n    const childrenWithoutSubTree = React__default.Children.toArray(children).filter(child => !( /*#__PURE__*/React__default.isValidElement(child) && child.type === SubTree));\n    return {\n      subTree,\n      childrenWithoutSubTree,\n      hasSubTree: Boolean(subTree)\n    };\n  }, [children]);\n}\n\n// ----------------------------------------------------------------------------\n// TreeView.LeadingVisual and TreeView.TrailingVisual\n\nconst LeadingVisual = props => {\n  const {\n    isExpanded,\n    leadingVisualId\n  } = React__default.useContext(ItemContext);\n  const children = typeof props.children === 'function' ? props.children({\n    isExpanded\n  }) : props.children;\n  return /*#__PURE__*/React__default.createElement(Slot, {\n    name: \"LeadingVisual\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"PRIVATE_VisuallyHidden\",\n    \"aria-hidden\": true,\n    id: leadingVisualId\n  }, props.label), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"PRIVATE_TreeView-item-visual\",\n    \"aria-hidden\": true\n  }, children));\n};\nLeadingVisual.displayName = \"LeadingVisual\";\nLeadingVisual.displayName = 'TreeView.LeadingVisual';\nconst TrailingVisual = props => {\n  const {\n    isExpanded,\n    trailingVisualId\n  } = React__default.useContext(ItemContext);\n  const children = typeof props.children === 'function' ? props.children({\n    isExpanded\n  }) : props.children;\n  return /*#__PURE__*/React__default.createElement(Slot, {\n    name: \"TrailingVisual\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"PRIVATE_VisuallyHidden\",\n    \"aria-hidden\": true,\n    id: trailingVisualId\n  }, props.label), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"PRIVATE_TreeView-item-visual\",\n    \"aria-hidden\": true\n  }, children));\n};\nTrailingVisual.displayName = \"TrailingVisual\";\nTrailingVisual.displayName = 'TreeView.TrailingVisual';\n\n// ----------------------------------------------------------------------------\n// TreeView.DirectoryIcon\n\nconst DirectoryIcon = () => {\n  const {\n    isExpanded\n  } = React__default.useContext(ItemContext);\n  const Icon = isExpanded ? FileDirectoryOpenFillIcon : FileDirectoryFillIcon;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"PRIVATE_TreeView-directory-icon\"\n  }, /*#__PURE__*/React__default.createElement(Icon, null));\n};\nDirectoryIcon.displayName = \"DirectoryIcon\";\nconst ErrorDialog = ({\n  title = 'Error',\n  children,\n  onRetry,\n  onDismiss\n}) => {\n  const {\n    itemId,\n    setIsExpanded\n  } = React__default.useContext(ItemContext);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    React__default.createElement(\"div\", {\n      onKeyDown: event => {\n        if (['Backspace', 'ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown', 'Enter'].includes(event.key)) {\n          // Prevent keyboard events from bubbling up to the TreeView\n          // and interfering with keyboard navigation\n          event.stopPropagation();\n        }\n      }\n    }, /*#__PURE__*/React__default.createElement(ConfirmationDialog, {\n      title: title,\n      onClose: gesture => {\n        // Focus parent item after the dialog is closed\n        setTimeout(() => {\n          const parentElement = document.getElementById(itemId);\n          parentElement === null || parentElement === void 0 ? void 0 : parentElement.focus();\n        });\n        if (gesture === 'confirm') {\n          onRetry === null || onRetry === void 0 ? void 0 : onRetry();\n        } else {\n          setIsExpanded(false);\n          onDismiss === null || onDismiss === void 0 ? void 0 : onDismiss();\n        }\n      },\n      confirmButtonContent: \"Retry\",\n      cancelButtonContent: \"Dismiss\"\n    }, children))\n  );\n};\nErrorDialog.displayName = \"ErrorDialog\";\nErrorDialog.displayName = 'TreeView.ErrorDialog';\n\n// ----------------------------------------------------------------------------\n// Export\n\nconst TreeView = Object.assign(Root, {\n  Item,\n  SubTree,\n  LeadingVisual,\n  TrailingVisual,\n  DirectoryIcon,\n  ErrorDialog\n});\n\nexport { TreeView };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}