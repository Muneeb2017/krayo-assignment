{"ast":null,"code":"var _jsxFileName = \"/home/muneeb/assignment-krayo/frontend/src/router/AppRouter.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n// import App from \"../components/App\";\n// import Header from \"../components/Header\";\n// import FilesList from \"../components/FilesList\";\n// import { GoogleOAuthProvider } from \"@react-oauth/google\";\n// import Loginwithgoogle from \"../components/LoginWithGoogle\";\n\n// const AppRouter = () => {\n//   const [isLoggedin, setLoggedin] = useState(false);\n//   return (\n//     <GoogleOAuthProvider clientId=\"1004046358549-4he79a4vc7os6t8g3agc299t6r1j3ndm.apps.googleusercontent.com\">\n//       <BrowserRouter>\n//         <div className=\"container\">\n//           <Header />\n//           <div className=\"main-content\">\n//             <Routes>\n//               <Route path=\"/login\" element={<Loginwithgoogle />} />\n\n//               <Route path=\"/\" element={<App />} />\n//               <Route path=\"/list\" element={<FilesList />} />\n//             </Routes>\n//           </div>\n//         </div>\n//       </BrowserRouter>\n//     </GoogleOAuthProvider>\n//   );\n// };\n\n// export default AppRouter;\n\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport App from \"../components/App\";\nimport Header from \"../components/Header\";\nimport FilesList from \"../components/FilesList\";\nimport { GoogleOAuthProvider } from \"@react-oauth/google\";\nimport Loginwithgoogle from \"../components/LoginWithGoogle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppRouter = () => {\n  _s();\n  const [isLoggedin, setLoggedin] = useState(false);\n  const handleLogin = () => {\n    setLoggedin(true);\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: \"1004046358549-4he79a4vc7os6t8g3agc299t6r1j3ndm.apps.googleusercontent.com\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Loginwithgoogle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/home\",\n              element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/list\",\n              element: isLoggedin ? /*#__PURE__*/_jsxDEV(FilesList, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 32\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\\" you are not logged in \\\" \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(AppRouter, \"nwTUc+dQIEmOxtBHPIJKwpgFSQA=\");\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","useState","BrowserRouter","Routes","Route","App","Header","FilesList","GoogleOAuthProvider","Loginwithgoogle","jsxDEV","_jsxDEV","AppRouter","_s","isLoggedin","setLoggedin","handleLogin","clientId","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/home/muneeb/assignment-krayo/frontend/src/router/AppRouter.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n// import App from \"../components/App\";\n// import Header from \"../components/Header\";\n// import FilesList from \"../components/FilesList\";\n// import { GoogleOAuthProvider } from \"@react-oauth/google\";\n// import Loginwithgoogle from \"../components/LoginWithGoogle\";\n\n// const AppRouter = () => {\n//   const [isLoggedin, setLoggedin] = useState(false);\n//   return (\n//     <GoogleOAuthProvider clientId=\"1004046358549-4he79a4vc7os6t8g3agc299t6r1j3ndm.apps.googleusercontent.com\">\n//       <BrowserRouter>\n//         <div className=\"container\">\n//           <Header />\n//           <div className=\"main-content\">\n//             <Routes>\n//               <Route path=\"/login\" element={<Loginwithgoogle />} />\n\n//               <Route path=\"/\" element={<App />} />\n//               <Route path=\"/list\" element={<FilesList />} />\n//             </Routes>\n//           </div>\n//         </div>\n//       </BrowserRouter>\n//     </GoogleOAuthProvider>\n//   );\n// };\n\n// export default AppRouter;\n\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport App from \"../components/App\";\nimport Header from \"../components/Header\";\nimport FilesList from \"../components/FilesList\";\nimport { GoogleOAuthProvider } from \"@react-oauth/google\";\nimport Loginwithgoogle from \"../components/LoginWithGoogle\";\n\nconst AppRouter = () => {\n  const [isLoggedin, setLoggedin] = useState(false);\n  const handleLogin = () => {\n    setLoggedin(true);\n  };\n\n  return (\n    <GoogleOAuthProvider clientId=\"1004046358549-4he79a4vc7os6t8g3agc299t6r1j3ndm.apps.googleusercontent.com\">\n      <BrowserRouter>\n        <div className=\"container\">\n          <Header />\n          <div className=\"main-content\">\n            <Routes>\n              <Route path=\"/\" element={<Loginwithgoogle />} />\n              <Route path=\"/home\" element={<App />} />\n              <Route\n                path=\"/list\"\n                element={\n                  isLoggedin ? <FilesList /> : <p>\" you are not logged in \" </p>\n                }\n              />\n            </Routes>\n\n            {/* <Routes>\n              <Route\n                path=\"/\"\n                element={<Loginwithgoogle setLoggedin={setLoggedin} />}\n              />\n\n              {isLoggedin && (\n                <>\n                  <Route path=\"/home\" element={<App />} />\n                  <Route path=\"/list\" element={<FilesList />} />\n                </>\n              )}\n            </Routes> */}\n          </div>\n        </div>\n      </BrowserRouter>\n    </GoogleOAuthProvider>\n  );\n};\n\nexport default AppRouter;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,OAAOC,eAAe,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMe,WAAW,GAAGA,CAAA,KAAM;IACxBD,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACEJ,OAAA,CAACH,mBAAmB;IAACS,QAAQ,EAAC,2EAA2E;IAAAC,QAAA,eACvGP,OAAA,CAACT,aAAa;MAAAgB,QAAA,eACZP,OAAA;QAAKQ,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACxBP,OAAA,CAACL,MAAM;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACVZ,OAAA;UAAKQ,SAAS,EAAC,cAAc;UAAAD,QAAA,eAC3BP,OAAA,CAACR,MAAM;YAAAe,QAAA,gBACLP,OAAA,CAACP,KAAK;cAACoB,IAAI,EAAC,GAAG;cAACC,OAAO,eAAEd,OAAA,CAACF,eAAe;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAI;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG,eAChDZ,OAAA,CAACP,KAAK;cAACoB,IAAI,EAAC,OAAO;cAACC,OAAO,eAAEd,OAAA,CAACN,GAAG;gBAAAe,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAAI;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG,eACxCZ,OAAA,CAACP,KAAK;cACJoB,IAAI,EAAC,OAAO;cACZC,OAAO,EACLX,UAAU,gBAAGH,OAAA,CAACJ,SAAS;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAG,gBAAGZ,OAAA;gBAAAO,QAAA,EAAG;cAA0B;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA;YAC3D;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACD;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACK;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAeL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACQ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI;AAE1B,CAAC;AAACV,EAAA,CAzCID,SAAS;AAAAc,EAAA,GAATd,SAAS;AA2Cf,eAAeA,SAAS;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}