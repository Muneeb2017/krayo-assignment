{"ast":null,"code":"import React__default from 'react';\nimport { iterateFocusableElements } from '@primer/behaviors/utils';\nimport { useMenuInitialFocus } from './useMenuInitialFocus.js';\nimport { useMnemonics } from './useMnemonics.js';\n\n/**\n * Keyboard navigation is a mix of 4 hooks\n * 1. useMenuInitialFocus\n * 2. useTypeaheadFocus\n * 3. useCloseMenuOnTab\n * 4. useMoveFocusToMenuItem\n */\nconst useMenuKeyboardNavigation = (open, onClose, containerRef, anchorRef) => {\n  useMenuInitialFocus(open, containerRef, anchorRef);\n  useMnemonics(open, containerRef);\n  useCloseMenuOnTab(open, onClose, containerRef, anchorRef);\n  useMoveFocusToMenuItem(open, containerRef, anchorRef);\n};\n\n/**\n * When Tab or Shift+Tab is pressed, the menu should close\n * and the focus should naturally move to the next item\n */\nconst useCloseMenuOnTab = (open, onClose, containerRef, anchorRef) => {\n  React__default.useEffect(() => {\n    const container = containerRef.current;\n    const anchor = anchorRef.current;\n    const handler = event => {\n      if (open && event.key === 'Tab') onClose === null || onClose === void 0 ? void 0 : onClose('tab');\n    };\n    container === null || container === void 0 ? void 0 : container.addEventListener('keydown', handler);\n    anchor === null || anchor === void 0 ? void 0 : anchor.addEventListener('keydown', handler);\n    return () => {\n      container === null || container === void 0 ? void 0 : container.removeEventListener('keydown', handler);\n      anchor === null || anchor === void 0 ? void 0 : anchor.removeEventListener('keydown', handler);\n    };\n  }, [open, onClose, containerRef, anchorRef]);\n};\n\n/**\n * When Arrow Keys are pressed and the focus is on the anchor,\n * focus should move to a menu item\n */\nconst useMoveFocusToMenuItem = (open, containerRef, anchorRef) => {\n  React__default.useEffect(() => {\n    const container = containerRef.current;\n    const anchor = anchorRef.current;\n    const handler = event => {\n      if (!open || !container) return;\n      const iterable = iterateFocusableElements(container);\n      if (event.key === 'ArrowDown') {\n        // TODO: does commenting this out break anything?\n        // event.preventDefault() // prevent scroll event\n        const firstElement = iterable.next().value;\n        /** We push imperative focus to the next tick to prevent React's batching */\n        setTimeout(() => firstElement === null || firstElement === void 0 ? void 0 : firstElement.focus());\n      } else if (event.key === 'ArrowUp') {\n        // TODO: does commenting this out break anything?\n        // event.preventDefault() // prevent scroll event\n        const elements = [...iterable];\n        const lastElement = elements[elements.length - 1];\n        setTimeout(() => lastElement.focus());\n      }\n    };\n    anchor === null || anchor === void 0 ? void 0 : anchor.addEventListener('keydown', handler);\n    return () => anchor === null || anchor === void 0 ? void 0 : anchor.addEventListener('keydown', handler);\n  }, [open, containerRef, anchorRef]);\n};\nexport { useMenuKeyboardNavigation };","map":{"version":3,"names":["React__default","iterateFocusableElements","useMenuInitialFocus","useMnemonics","useMenuKeyboardNavigation","open","onClose","containerRef","anchorRef","useCloseMenuOnTab","useMoveFocusToMenuItem","useEffect","container","current","anchor","handler","event","key","addEventListener","removeEventListener","iterable","firstElement","next","value","setTimeout","focus","elements","lastElement","length"],"sources":["/home/muneeb/assignment-krayo/frontend/node_modules/@primer/react/lib-esm/hooks/useMenuKeyboardNavigation.js"],"sourcesContent":["import React__default from 'react';\nimport { iterateFocusableElements } from '@primer/behaviors/utils';\nimport { useMenuInitialFocus } from './useMenuInitialFocus.js';\nimport { useMnemonics } from './useMnemonics.js';\n\n/**\n * Keyboard navigation is a mix of 4 hooks\n * 1. useMenuInitialFocus\n * 2. useTypeaheadFocus\n * 3. useCloseMenuOnTab\n * 4. useMoveFocusToMenuItem\n */\nconst useMenuKeyboardNavigation = (open, onClose, containerRef, anchorRef) => {\n  useMenuInitialFocus(open, containerRef, anchorRef);\n  useMnemonics(open, containerRef);\n  useCloseMenuOnTab(open, onClose, containerRef, anchorRef);\n  useMoveFocusToMenuItem(open, containerRef, anchorRef);\n};\n\n/**\n * When Tab or Shift+Tab is pressed, the menu should close\n * and the focus should naturally move to the next item\n */\nconst useCloseMenuOnTab = (open, onClose, containerRef, anchorRef) => {\n  React__default.useEffect(() => {\n    const container = containerRef.current;\n    const anchor = anchorRef.current;\n    const handler = event => {\n      if (open && event.key === 'Tab') onClose === null || onClose === void 0 ? void 0 : onClose('tab');\n    };\n    container === null || container === void 0 ? void 0 : container.addEventListener('keydown', handler);\n    anchor === null || anchor === void 0 ? void 0 : anchor.addEventListener('keydown', handler);\n    return () => {\n      container === null || container === void 0 ? void 0 : container.removeEventListener('keydown', handler);\n      anchor === null || anchor === void 0 ? void 0 : anchor.removeEventListener('keydown', handler);\n    };\n  }, [open, onClose, containerRef, anchorRef]);\n};\n\n/**\n * When Arrow Keys are pressed and the focus is on the anchor,\n * focus should move to a menu item\n */\nconst useMoveFocusToMenuItem = (open, containerRef, anchorRef) => {\n  React__default.useEffect(() => {\n    const container = containerRef.current;\n    const anchor = anchorRef.current;\n    const handler = event => {\n      if (!open || !container) return;\n      const iterable = iterateFocusableElements(container);\n      if (event.key === 'ArrowDown') {\n        // TODO: does commenting this out break anything?\n        // event.preventDefault() // prevent scroll event\n        const firstElement = iterable.next().value;\n        /** We push imperative focus to the next tick to prevent React's batching */\n        setTimeout(() => firstElement === null || firstElement === void 0 ? void 0 : firstElement.focus());\n      } else if (event.key === 'ArrowUp') {\n        // TODO: does commenting this out break anything?\n        // event.preventDefault() // prevent scroll event\n        const elements = [...iterable];\n        const lastElement = elements[elements.length - 1];\n        setTimeout(() => lastElement.focus());\n      }\n    };\n    anchor === null || anchor === void 0 ? void 0 : anchor.addEventListener('keydown', handler);\n    return () => anchor === null || anchor === void 0 ? void 0 : anchor.addEventListener('keydown', handler);\n  }, [open, containerRef, anchorRef]);\n};\n\nexport { useMenuKeyboardNavigation };\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,OAAO;AAClC,SAASC,wBAAwB,QAAQ,yBAAyB;AAClE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,YAAY,QAAQ,mBAAmB;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,yBAAyB,GAAGA,CAACC,IAAI,EAAEC,OAAO,EAAEC,YAAY,EAAEC,SAAS,KAAK;EAC5EN,mBAAmB,CAACG,IAAI,EAAEE,YAAY,EAAEC,SAAS,CAAC;EAClDL,YAAY,CAACE,IAAI,EAAEE,YAAY,CAAC;EAChCE,iBAAiB,CAACJ,IAAI,EAAEC,OAAO,EAAEC,YAAY,EAAEC,SAAS,CAAC;EACzDE,sBAAsB,CAACL,IAAI,EAAEE,YAAY,EAAEC,SAAS,CAAC;AACvD,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMC,iBAAiB,GAAGA,CAACJ,IAAI,EAAEC,OAAO,EAAEC,YAAY,EAAEC,SAAS,KAAK;EACpER,cAAc,CAACW,SAAS,CAAC,MAAM;IAC7B,MAAMC,SAAS,GAAGL,YAAY,CAACM,OAAO;IACtC,MAAMC,MAAM,GAAGN,SAAS,CAACK,OAAO;IAChC,MAAME,OAAO,GAAGC,KAAK,IAAI;MACvB,IAAIX,IAAI,IAAIW,KAAK,CAACC,GAAG,KAAK,KAAK,EAAEX,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAAC,KAAK,CAAC;IACnG,CAAC;IACDM,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACM,gBAAgB,CAAC,SAAS,EAAEH,OAAO,CAAC;IACpGD,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACI,gBAAgB,CAAC,SAAS,EAAEH,OAAO,CAAC;IAC3F,OAAO,MAAM;MACXH,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,SAAS,CAACO,mBAAmB,CAAC,SAAS,EAAEJ,OAAO,CAAC;MACvGD,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACK,mBAAmB,CAAC,SAAS,EAAEJ,OAAO,CAAC;IAChG,CAAC;EACH,CAAC,EAAE,CAACV,IAAI,EAAEC,OAAO,EAAEC,YAAY,EAAEC,SAAS,CAAC,CAAC;AAC9C,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAME,sBAAsB,GAAGA,CAACL,IAAI,EAAEE,YAAY,EAAEC,SAAS,KAAK;EAChER,cAAc,CAACW,SAAS,CAAC,MAAM;IAC7B,MAAMC,SAAS,GAAGL,YAAY,CAACM,OAAO;IACtC,MAAMC,MAAM,GAAGN,SAAS,CAACK,OAAO;IAChC,MAAME,OAAO,GAAGC,KAAK,IAAI;MACvB,IAAI,CAACX,IAAI,IAAI,CAACO,SAAS,EAAE;MACzB,MAAMQ,QAAQ,GAAGnB,wBAAwB,CAACW,SAAS,CAAC;MACpD,IAAII,KAAK,CAACC,GAAG,KAAK,WAAW,EAAE;QAC7B;QACA;QACA,MAAMI,YAAY,GAAGD,QAAQ,CAACE,IAAI,EAAE,CAACC,KAAK;QAC1C;QACAC,UAAU,CAAC,MAAMH,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACI,KAAK,EAAE,CAAC;MACpG,CAAC,MAAM,IAAIT,KAAK,CAACC,GAAG,KAAK,SAAS,EAAE;QAClC;QACA;QACA,MAAMS,QAAQ,GAAG,CAAC,GAAGN,QAAQ,CAAC;QAC9B,MAAMO,WAAW,GAAGD,QAAQ,CAACA,QAAQ,CAACE,MAAM,GAAG,CAAC,CAAC;QACjDJ,UAAU,CAAC,MAAMG,WAAW,CAACF,KAAK,EAAE,CAAC;MACvC;IACF,CAAC;IACDX,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACI,gBAAgB,CAAC,SAAS,EAAEH,OAAO,CAAC;IAC3F,OAAO,MAAMD,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACI,gBAAgB,CAAC,SAAS,EAAEH,OAAO,CAAC;EAC1G,CAAC,EAAE,CAACV,IAAI,EAAEE,YAAY,EAAEC,SAAS,CAAC,CAAC;AACrC,CAAC;AAED,SAASJ,yBAAyB"},"metadata":{},"sourceType":"module","externalDependencies":[]}