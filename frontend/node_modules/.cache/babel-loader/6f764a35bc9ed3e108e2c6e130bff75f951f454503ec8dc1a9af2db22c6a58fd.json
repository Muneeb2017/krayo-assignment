{"ast":null,"code":"import React__default from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport { canUseDOM } from '../utils/environment.js';\nimport useIsomorphicLayoutEffect from '../utils/useIsomorphicLayoutEffect.js';\nimport { getScrollContainer } from '../utils/scroll.js';\n\n/**\n * Calculates the height of the sticky pane such that it always\n * fits into the viewport even when the header or footer are visible.\n */\nfunction useStickyPaneHeight() {\n  const rootRef = React__default.useRef(null);\n\n  // Default the height to the viewport height\n  const [height, setHeight] = React__default.useState(dvh(100));\n  const [offsetHeader, setOffsetHeader] = React__default.useState(0);\n\n  // Create intersection observers to track the top and bottom of the content region\n  const [contentTopRef, contentTopInView, contentTopEntry] = useInView();\n  const [contentBottomRef, contentBottomInView] = useInView();\n\n  // Calculate the height of the sticky pane based on the position of the\n  // top and bottom of the content region\n  const calculateHeight = React__default.useCallback(() => {\n    // Uncomment to debug\n    // console.log('Recalculating pane height...')\n\n    let calculatedHeight = '';\n    const scrollContainer = getScrollContainer(rootRef.current);\n    const topRect = contentTopEntry === null || contentTopEntry === void 0 ? void 0 : contentTopEntry.target.getBoundingClientRect();\n\n    // Custom sticky header's height with units\n    const offsetHeaderWithUnits = typeof offsetHeader === 'number' ? `${offsetHeader}px` : offsetHeader;\n    if (scrollContainer) {\n      const scrollRect = scrollContainer.getBoundingClientRect();\n      const topOffset = topRect ? Math.max(topRect.top - scrollRect.top, 0) : 0;\n      calculatedHeight = `calc(${scrollRect.height}px - (max(${topOffset}px, ${offsetHeaderWithUnits})))`;\n    } else {\n      const topOffset = topRect ? Math.max(topRect.top, 0) : 0;\n      calculatedHeight = `calc(${dvh(100)} - (max(${topOffset}px, ${offsetHeaderWithUnits})))`;\n    }\n    setHeight(calculatedHeight);\n  }, [contentTopEntry, offsetHeader]);\n\n  // We only want to add scroll and resize listeners if the pane is sticky.\n  // Since hooks can't be called conditionally, we need to use state to track\n  // if the pane is sticky.\n  const [isEnabled, setIsEnabled] = React__default.useState(false);\n  useIsomorphicLayoutEffect(() => {\n    const scrollContainer = getScrollContainer(rootRef.current);\n    if (isEnabled && (contentTopInView || contentBottomInView)) {\n      calculateHeight();\n\n      // Start listeners if the top or the bottom edge of the content region is visible\n\n      if (scrollContainer) {\n        // eslint-disable-next-line github/prefer-observers\n        scrollContainer.addEventListener('scroll', calculateHeight);\n      } else {\n        // eslint-disable-next-line github/prefer-observers\n        window.addEventListener('scroll', calculateHeight);\n      }\n\n      // eslint-disable-next-line github/prefer-observers\n      window.addEventListener('resize', calculateHeight);\n    }\n    return () => {\n      // Stop listeners if neither the top nor the bottom edge of the content region is visible\n\n      if (scrollContainer) {\n        scrollContainer.removeEventListener('scroll', calculateHeight);\n      } else {\n        window.removeEventListener('scroll', calculateHeight);\n      }\n      window.removeEventListener('resize', calculateHeight);\n    };\n  }, [isEnabled, contentTopInView, contentBottomInView, calculateHeight]);\n  function enableStickyPane(top) {\n    setIsEnabled(true);\n    setOffsetHeader(top);\n  }\n  function disableStickyPane() {\n    setIsEnabled(false);\n  }\n  return {\n    rootRef,\n    enableStickyPane,\n    disableStickyPane,\n    contentTopRef,\n    contentBottomRef,\n    stickyPaneHeight: height\n  };\n}\n\n// TODO: there is currently an issue with dvh on Desktop Safari 15.6, 16.0. To\n// work around it, we check to see if the device supports touch along with the\n// dvh unit in order to target iPad. When the bug is addressed this check will\n// no longer be needed\n//\n// @see https://bugs.webkit.org/show_bug.cgi?id=242758\nconst supportsTouchCallout = canUseDOM ? CSS.supports('-webkit-touch-callout', 'none') : false;\nconst supportsDVH = canUseDOM ? CSS.supports('max-height', '100dvh') && supportsTouchCallout : false;\n\n/**\n * Convert the given value to a dvh value, if supported, otherwise it falls back\n * to vh\n */\nfunction dvh(value) {\n  if (supportsDVH) {\n    return `${value}dvh`;\n  }\n  return `${value}vh`;\n}\nexport { useStickyPaneHeight };","map":{"version":3,"names":["React__default","useInView","canUseDOM","useIsomorphicLayoutEffect","getScrollContainer","useStickyPaneHeight","rootRef","useRef","height","setHeight","useState","dvh","offsetHeader","setOffsetHeader","contentTopRef","contentTopInView","contentTopEntry","contentBottomRef","contentBottomInView","calculateHeight","useCallback","calculatedHeight","scrollContainer","current","topRect","target","getBoundingClientRect","offsetHeaderWithUnits","scrollRect","topOffset","Math","max","top","isEnabled","setIsEnabled","addEventListener","window","removeEventListener","enableStickyPane","disableStickyPane","stickyPaneHeight","supportsTouchCallout","CSS","supports","supportsDVH","value"],"sources":["/home/muneeb/assignment-krayo/frontend/node_modules/@primer/react/lib-esm/PageLayout/useStickyPaneHeight.js"],"sourcesContent":["import React__default from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport { canUseDOM } from '../utils/environment.js';\nimport useIsomorphicLayoutEffect from '../utils/useIsomorphicLayoutEffect.js';\nimport { getScrollContainer } from '../utils/scroll.js';\n\n/**\n * Calculates the height of the sticky pane such that it always\n * fits into the viewport even when the header or footer are visible.\n */\nfunction useStickyPaneHeight() {\n  const rootRef = React__default.useRef(null);\n\n  // Default the height to the viewport height\n  const [height, setHeight] = React__default.useState(dvh(100));\n  const [offsetHeader, setOffsetHeader] = React__default.useState(0);\n\n  // Create intersection observers to track the top and bottom of the content region\n  const [contentTopRef, contentTopInView, contentTopEntry] = useInView();\n  const [contentBottomRef, contentBottomInView] = useInView();\n\n  // Calculate the height of the sticky pane based on the position of the\n  // top and bottom of the content region\n  const calculateHeight = React__default.useCallback(() => {\n    // Uncomment to debug\n    // console.log('Recalculating pane height...')\n\n    let calculatedHeight = '';\n    const scrollContainer = getScrollContainer(rootRef.current);\n    const topRect = contentTopEntry === null || contentTopEntry === void 0 ? void 0 : contentTopEntry.target.getBoundingClientRect();\n\n    // Custom sticky header's height with units\n    const offsetHeaderWithUnits = typeof offsetHeader === 'number' ? `${offsetHeader}px` : offsetHeader;\n    if (scrollContainer) {\n      const scrollRect = scrollContainer.getBoundingClientRect();\n      const topOffset = topRect ? Math.max(topRect.top - scrollRect.top, 0) : 0;\n      calculatedHeight = `calc(${scrollRect.height}px - (max(${topOffset}px, ${offsetHeaderWithUnits})))`;\n    } else {\n      const topOffset = topRect ? Math.max(topRect.top, 0) : 0;\n      calculatedHeight = `calc(${dvh(100)} - (max(${topOffset}px, ${offsetHeaderWithUnits})))`;\n    }\n    setHeight(calculatedHeight);\n  }, [contentTopEntry, offsetHeader]);\n\n  // We only want to add scroll and resize listeners if the pane is sticky.\n  // Since hooks can't be called conditionally, we need to use state to track\n  // if the pane is sticky.\n  const [isEnabled, setIsEnabled] = React__default.useState(false);\n  useIsomorphicLayoutEffect(() => {\n    const scrollContainer = getScrollContainer(rootRef.current);\n    if (isEnabled && (contentTopInView || contentBottomInView)) {\n      calculateHeight();\n\n      // Start listeners if the top or the bottom edge of the content region is visible\n\n      if (scrollContainer) {\n        // eslint-disable-next-line github/prefer-observers\n        scrollContainer.addEventListener('scroll', calculateHeight);\n      } else {\n        // eslint-disable-next-line github/prefer-observers\n        window.addEventListener('scroll', calculateHeight);\n      }\n\n      // eslint-disable-next-line github/prefer-observers\n      window.addEventListener('resize', calculateHeight);\n    }\n    return () => {\n      // Stop listeners if neither the top nor the bottom edge of the content region is visible\n\n      if (scrollContainer) {\n        scrollContainer.removeEventListener('scroll', calculateHeight);\n      } else {\n        window.removeEventListener('scroll', calculateHeight);\n      }\n      window.removeEventListener('resize', calculateHeight);\n    };\n  }, [isEnabled, contentTopInView, contentBottomInView, calculateHeight]);\n  function enableStickyPane(top) {\n    setIsEnabled(true);\n    setOffsetHeader(top);\n  }\n  function disableStickyPane() {\n    setIsEnabled(false);\n  }\n  return {\n    rootRef,\n    enableStickyPane,\n    disableStickyPane,\n    contentTopRef,\n    contentBottomRef,\n    stickyPaneHeight: height\n  };\n}\n\n// TODO: there is currently an issue with dvh on Desktop Safari 15.6, 16.0. To\n// work around it, we check to see if the device supports touch along with the\n// dvh unit in order to target iPad. When the bug is addressed this check will\n// no longer be needed\n//\n// @see https://bugs.webkit.org/show_bug.cgi?id=242758\nconst supportsTouchCallout = canUseDOM ? CSS.supports('-webkit-touch-callout', 'none') : false;\nconst supportsDVH = canUseDOM ? CSS.supports('max-height', '100dvh') && supportsTouchCallout : false;\n\n/**\n * Convert the given value to a dvh value, if supported, otherwise it falls back\n * to vh\n */\nfunction dvh(value) {\n  if (supportsDVH) {\n    return `${value}dvh`;\n  }\n  return `${value}vh`;\n}\n\nexport { useStickyPaneHeight };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}