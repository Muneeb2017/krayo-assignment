{"ast":null,"code":"import React__default, { forwardRef, useRef, useState, useEffect, useCallback } from 'react';\nimport sx from '../sx.js';\nimport { UnderlineNavContext } from './UnderlineNavContext.js';\nimport { useResizeObserver } from '../hooks/useResizeObserver.js';\nimport { useTheme } from '../ThemeProvider.js';\nimport VisuallyHidden from '../_VisuallyHidden.js';\nimport { getNavStyles, ulStyles, getDividerStyle, moreBtnStyles, menuStyles, menuItemStyles, GAP } from './styles.js';\nimport styled from 'styled-components';\nimport { LoadingCounter } from './LoadingCounter.js';\nimport { Button } from '../Button/index.js';\nimport { TriangleDownIcon } from '@primer/octicons-react';\nimport { useOnEscapePress } from '../hooks/useOnEscapePress.js';\nimport { useOnOutsideClick } from '../hooks/useOnOutsideClick.js';\nimport { useId } from '../hooks/useId.js';\nimport { ActionList } from '../ActionList/index.js';\nimport { defaultSxProp } from '../utils/defaultSxProp.js';\nimport Box from '../Box/Box.js';\nimport CounterLabel from '../CounterLabel/CounterLabel.js';\nimport merge from 'deepmerge';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n// When page is loaded, we don't have ref for the more button as it is not on the DOM yet.\n// However, we need to calculate number of possible items when the more button present as well. So using the width of the more button as a constant.\nconst MORE_BTN_WIDTH = 86;\n// The height is needed to make sure we don't have a layout shift when the more button is the only item in the nav.\nconst MORE_BTN_HEIGHT = 45;\n\n// Needed this because passing a ref using HTMLULListElement to `Box` causes a type error\nconst NavigationList = styled.ul.withConfig({\n  displayName: \"UnderlineNav__NavigationList\",\n  componentId: \"sc-3wwkh2-0\"\n})([\"\", \";\"], sx);\nconst MoreMenuListItem = styled.li.withConfig({\n  displayName: \"UnderlineNav__MoreMenuListItem\",\n  componentId: \"sc-3wwkh2-1\"\n})([\"display:flex;align-items:center;height:\", \"px;\"], MORE_BTN_HEIGHT);\nconst overflowEffect = (navWidth, moreMenuWidth, childArray, childWidthArray, noIconChildWidthArray, updateListAndMenu) => {\n  let iconsVisible = true;\n  if (childWidthArray.length === 0) {\n    updateListAndMenu({\n      items: childArray,\n      actions: []\n    }, iconsVisible);\n  }\n  const numberOfItemsPossible = calculatePossibleItems(childWidthArray, navWidth);\n  const numberOfItemsWithoutIconPossible = calculatePossibleItems(noIconChildWidthArray, navWidth);\n  // We need to take more menu width into account when calculating the number of items possible\n  const numberOfItemsPossibleWithMoreMenu = calculatePossibleItems(noIconChildWidthArray, navWidth, moreMenuWidth || MORE_BTN_WIDTH);\n  const items = [];\n  const actions = [];\n\n  // First, we check if we can fit all the items with their icons\n  if (childArray.length <= numberOfItemsPossible) {\n    items.push(...childArray);\n  } else if (childArray.length <= numberOfItemsWithoutIconPossible) {\n    // if we can't fit all the items with their icons, we check if we can fit all the items without their icons\n    iconsVisible = false;\n    items.push(...childArray);\n  } else {\n    // if we can't fit all the items without their icons, we keep the icons hidden and show the ones that doesn't fit into the list in the overflow menu\n    iconsVisible = false;\n\n    /* Below is an accessibiility requirement. Never show only one item in the overflow menu.\n     * If there is only one item left to display in the overflow menu according to the calculation,\n     * we need to pull another item from the list into the overflow menu.\n     */\n    const numberOfItemsInMenu = childArray.length - numberOfItemsPossibleWithMoreMenu;\n    const numberOfListItems = numberOfItemsInMenu === 1 ? numberOfItemsPossibleWithMoreMenu - 1 : numberOfItemsPossibleWithMoreMenu;\n    for (const [index, child] of childArray.entries()) {\n      if (index < numberOfListItems) {\n        items.push(child);\n      } else {\n        const ariaCurrent = child.props['aria-current'];\n        const isCurrent = Boolean(ariaCurrent) && ariaCurrent !== 'false';\n        // We need to make sure to keep the selected item always visible.\n        // To do that, we swap the selected item with the last item in the list to make it visible. (When there is at least 1 item in the list to swap.)\n        if (isCurrent && numberOfListItems > 0) {\n          // If selected item couldn't make in to the list, we swap it with the last item in the list.\n          const indexToReplaceAt = numberOfListItems - 1; // because we are replacing the last item in the list\n          // splice method modifies the array by removing 1 item here at the given index and replace it with the \"child\" element then returns the removed item.\n          const propsectiveAction = items.splice(indexToReplaceAt, 1, child)[0];\n          actions.push(propsectiveAction);\n        } else {\n          actions.push(child);\n        }\n      }\n    }\n  }\n  updateListAndMenu({\n    items,\n    actions\n  }, iconsVisible);\n};\nconst getValidChildren = children => {\n  return React__default.Children.toArray(children).filter(child => /*#__PURE__*/React__default.isValidElement(child));\n};\nconst calculatePossibleItems = function (childWidthArray, navWidth) {\n  let moreMenuWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  const widthToFit = navWidth - moreMenuWidth;\n  let breakpoint = childWidthArray.length - 1;\n  let sumsOfChildWidth = 0;\n  for (const [index, childWidth] of childWidthArray.entries()) {\n    if (sumsOfChildWidth > widthToFit) {\n      breakpoint = index - 1;\n      break;\n    } else {\n      // The the gap between items into account when calculating the number of items possible\n      sumsOfChildWidth = sumsOfChildWidth + childWidth.width + GAP;\n    }\n  }\n  return breakpoint;\n};\nconst UnderlineNav = /*#__PURE__*/forwardRef((_ref, forwardedRef) => {\n  let {\n    as = 'nav',\n    align,\n    'aria-label': ariaLabel,\n    sx: sxProp = defaultSxProp,\n    afterSelect,\n    variant = 'default',\n    loadingCounters = false,\n    children\n  } = _ref;\n  const backupRef = useRef(null);\n  const navRef = forwardedRef !== null && forwardedRef !== void 0 ? forwardedRef : backupRef;\n  const listRef = useRef(null);\n  const moreMenuRef = useRef(null);\n  const moreMenuBtnRef = useRef(null);\n  const containerRef = React__default.useRef(null);\n  const disclosureWidgetId = useId();\n  const {\n    theme\n  } = useTheme();\n  function getItemsWidth(itemText) {\n    var _noIconChildWidthArra;\n    return ((_noIconChildWidthArra = noIconChildWidthArray.find(item => item.text === itemText)) === null || _noIconChildWidthArra === void 0 ? void 0 : _noIconChildWidthArra.width) || 0;\n  }\n  const swapMenuItemWithListItem = (prospectiveListItem, indexOfProspectiveListItem, event, callback) => {\n    var _listRef$current;\n    // get the selected menu item's width\n    const widthToFitIntoList = getItemsWidth(prospectiveListItem.props.children);\n    // Check if there is any empty space on the right side of the list\n    const availableSpace = navRef.current.getBoundingClientRect().width - (((_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.getBoundingClientRect().width) || 0);\n\n    // Calculate how many items need to be pulled in to the menu to make room for the selected menu item\n    // I.e. if we need to pull 2 items in (index 0 and index 1), breakpoint (index) will return 1.\n    const index = getBreakpointForItemSwapping(widthToFitIntoList, availableSpace);\n    const indexToSliceAt = responsiveProps.items.length - 1 - index;\n    // Form the new list of items\n    const itemsLeftInList = [...responsiveProps.items].slice(0, indexToSliceAt);\n    const updatedItemList = [...itemsLeftInList, prospectiveListItem];\n    // Form the new menu items\n    const itemsToAddToMenu = [...responsiveProps.items].slice(indexToSliceAt);\n    const updatedMenuItems = [...actions];\n    // Add itemsToAddToMenu array's items to the menu at the index of the prospectiveListItem and remove 1 count of items (prospectiveListItem)\n    updatedMenuItems.splice(indexOfProspectiveListItem, 1, ...itemsToAddToMenu);\n    setSelectedLinkText(prospectiveListItem.props.children);\n    callback({\n      items: updatedItemList,\n      actions: updatedMenuItems\n    }, false);\n  };\n  // How many items do we need to pull in to the menu to make room for the selected menu item.\n  function getBreakpointForItemSwapping(widthToFitIntoList, availableSpace) {\n    let widthToSwap = 0;\n    let breakpoint = 0;\n    for (const [index, item] of [...responsiveProps.items].reverse().entries()) {\n      widthToSwap += getItemsWidth(item.props.children);\n      if (widthToFitIntoList < widthToSwap + availableSpace) {\n        breakpoint = index;\n        break;\n      }\n    }\n    return breakpoint;\n  }\n  const [selectedLink, setSelectedLink] = useState(undefined);\n\n  // selectedLinkText is needed to be able set the selected menu item as selectedLink.\n  // This is needed because setSelectedLink only accepts ref but at the time of setting selected menu item as selectedLink, its ref as a list item is not available\n  const [selectedLinkText, setSelectedLinkText] = useState('');\n  // Capture the mouse/keyboard event when a menu item is selected so that we can use it to fire the onSelect callback after the menu item is swapped with the list item\n  const [selectEvent, setSelectEvent] = useState(null);\n  const [iconsVisible, setIconsVisible] = useState(true);\n  const afterSelectHandler = event => {\n    if (!event.defaultPrevented) {\n      if (typeof afterSelect === 'function') afterSelect(event);\n      closeOverlay();\n    }\n  };\n  const [responsiveProps, setResponsiveProps] = useState({\n    items: getValidChildren(children),\n    actions: []\n  });\n\n  /*\n   * This is needed to make sure responsiveProps.items and ResponsiveProps.actions are updated when children are changed\n   * Particually when an item is selected. It adds 'aria-current=\"page\"' attribute to the child and we need to make sure\n   * responsiveProps.items and ResponsiveProps.actions are updated with that attribute\n   */\n  useEffect(() => {\n    const childArray = getValidChildren(children);\n    const updatedItems = responsiveProps.items.map(item => {\n      return childArray.find(child => child.key === item.key) || item;\n    });\n    const updatedActions = responsiveProps.actions.map(action => {\n      return childArray.find(child => child.key === action.key) || action;\n    });\n    setResponsiveProps({\n      items: updatedItems,\n      actions: updatedActions\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [children]);\n  const updateListAndMenu = useCallback((props, displayIcons) => {\n    setResponsiveProps(props);\n    setIconsVisible(displayIcons);\n  }, []);\n  const actions = responsiveProps.actions;\n  // This is the case where the viewport is too narrow to show any list item with the more menu. In this case, we only show the dropdown\n  const onlyMenuVisible = responsiveProps.items.length === 0;\n  const [childWidthArray, setChildWidthArray] = useState([]);\n  const setChildrenWidth = useCallback(size => {\n    setChildWidthArray(arr => {\n      const newArr = [...arr, size];\n      return newArr;\n    });\n  }, []);\n  const [noIconChildWidthArray, setNoIconChildWidthArray] = useState([]);\n  const setNoIconChildrenWidth = useCallback(size => {\n    setNoIconChildWidthArray(arr => {\n      const newArr = [...arr, size];\n      return newArr;\n    });\n  }, []);\n  useResizeObserver(resizeObserverEntries => {\n    var _moreMenuRef$current$, _moreMenuRef$current;\n    const childArray = getValidChildren(children);\n    const navWidth = resizeObserverEntries[0].contentRect.width;\n    const moreMenuWidth = (_moreMenuRef$current$ = (_moreMenuRef$current = moreMenuRef.current) === null || _moreMenuRef$current === void 0 ? void 0 : _moreMenuRef$current.getBoundingClientRect().width) !== null && _moreMenuRef$current$ !== void 0 ? _moreMenuRef$current$ : 0;\n    navWidth !== 0 && overflowEffect(navWidth, moreMenuWidth, childArray, childWidthArray, noIconChildWidthArray, updateListAndMenu);\n  }, navRef);\n  if (!ariaLabel) {\n    // eslint-disable-next-line no-console\n    console.warn('Use the `aria-label` prop to provide an accessible label for assistive technology');\n  }\n  const [isWidgetOpen, setIsWidgetOpen] = useState(false);\n  const closeOverlay = React__default.useCallback(() => {\n    setIsWidgetOpen(false);\n  }, [setIsWidgetOpen]);\n  const focusOnMoreMenuBtn = React__default.useCallback(() => {\n    var _moreMenuBtnRef$curre;\n    (_moreMenuBtnRef$curre = moreMenuBtnRef.current) === null || _moreMenuBtnRef$curre === void 0 ? void 0 : _moreMenuBtnRef$curre.focus();\n  }, []);\n  useOnEscapePress(event => {\n    if (isWidgetOpen) {\n      event.preventDefault();\n      closeOverlay();\n      focusOnMoreMenuBtn();\n    }\n  }, [isWidgetOpen]);\n  useOnOutsideClick({\n    onClickOutside: closeOverlay,\n    containerRef,\n    ignoreClickRefs: [moreMenuBtnRef]\n  });\n  const onAnchorClick = useCallback(event => {\n    if (event.defaultPrevented || event.button !== 0) {\n      return;\n    }\n    setIsWidgetOpen(isWidgetOpen => !isWidgetOpen);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(UnderlineNavContext.Provider, {\n    value: {\n      theme,\n      setChildrenWidth,\n      setNoIconChildrenWidth,\n      selectedLink,\n      setSelectedLink,\n      selectedLinkText,\n      setSelectedLinkText,\n      selectEvent,\n      afterSelect: afterSelectHandler,\n      variant,\n      loadingCounters,\n      iconsVisible\n    }\n  }, ariaLabel && /*#__PURE__*/React__default.createElement(VisuallyHidden, {\n    as: \"h2\"\n  }, `${ariaLabel} navigation`), /*#__PURE__*/React__default.createElement(Box, {\n    as: as,\n    sx: merge(getNavStyles(theme, {\n      align\n    }), sxProp),\n    \"aria-label\": ariaLabel,\n    ref: navRef\n  }, /*#__PURE__*/React__default.createElement(NavigationList, {\n    sx: ulStyles,\n    ref: listRef,\n    role: \"list\"\n  }, responsiveProps.items, actions.length > 0 && /*#__PURE__*/React__default.createElement(MoreMenuListItem, {\n    ref: moreMenuRef\n  }, !onlyMenuVisible && /*#__PURE__*/React__default.createElement(Box, {\n    sx: getDividerStyle(theme)\n  }), /*#__PURE__*/React__default.createElement(Button, {\n    ref: moreMenuBtnRef,\n    sx: moreBtnStyles,\n    \"aria-controls\": disclosureWidgetId,\n    \"aria-expanded\": isWidgetOpen,\n    onClick: onAnchorClick,\n    trailingAction: TriangleDownIcon\n  }, /*#__PURE__*/React__default.createElement(Box, {\n    as: \"span\"\n  }, onlyMenuVisible ? /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(VisuallyHidden, {\n    as: \"span\"\n  }, `${ariaLabel}`, \"\\xA0\"), \"Menu\") : /*#__PURE__*/React__default.createElement(React__default.Fragment, null, \"More\", /*#__PURE__*/React__default.createElement(VisuallyHidden, {\n    as: \"span\"\n  }, \"\\xA0\", `${ariaLabel} items`)))), /*#__PURE__*/React__default.createElement(ActionList, {\n    selectionVariant: \"single\",\n    ref: containerRef,\n    id: disclosureWidgetId,\n    sx: menuStyles,\n    style: {\n      display: isWidgetOpen ? 'block' : 'none'\n    }\n  }, actions.map((action, index) => {\n    const {\n      children: actionElementChildren,\n      ...actionElementProps\n    } = action.props;\n    return /*#__PURE__*/React__default.createElement(Box, {\n      key: actionElementChildren,\n      as: \"li\"\n    }, /*#__PURE__*/React__default.createElement(ActionList.Item, _extends({}, actionElementProps, {\n      as: action.props.as || 'a',\n      sx: menuItemStyles,\n      onSelect: event => {\n        // When there are no items in the list, do not run the swap function as we want to keep everything in the menu.\n        !onlyMenuVisible && swapMenuItemWithListItem(action, index, event, updateListAndMenu);\n        setSelectEvent(event);\n        closeOverlay();\n        focusOnMoreMenuBtn();\n      }\n    }), /*#__PURE__*/React__default.createElement(Box, {\n      as: \"span\",\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }\n    }, actionElementChildren, loadingCounters ? /*#__PURE__*/React__default.createElement(LoadingCounter, null) : actionElementProps.counter !== undefined && /*#__PURE__*/React__default.createElement(Box, {\n      as: \"span\",\n      \"data-component\": \"counter\"\n    }, /*#__PURE__*/React__default.createElement(CounterLabel, null, actionElementProps.counter)))));\n  }))))));\n});\nUnderlineNav.displayName = 'UnderlineNav';\nexport { UnderlineNav };","map":{"version":3,"names":["React__default","forwardRef","useRef","useState","useEffect","useCallback","sx","UnderlineNavContext","useResizeObserver","useTheme","VisuallyHidden","getNavStyles","ulStyles","getDividerStyle","moreBtnStyles","menuStyles","menuItemStyles","GAP","styled","LoadingCounter","Button","TriangleDownIcon","useOnEscapePress","useOnOutsideClick","useId","ActionList","defaultSxProp","Box","CounterLabel","merge","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","MORE_BTN_WIDTH","MORE_BTN_HEIGHT","NavigationList","ul","withConfig","displayName","componentId","MoreMenuListItem","li","overflowEffect","navWidth","moreMenuWidth","childArray","childWidthArray","noIconChildWidthArray","updateListAndMenu","iconsVisible","items","actions","numberOfItemsPossible","calculatePossibleItems","numberOfItemsWithoutIconPossible","numberOfItemsPossibleWithMoreMenu","push","numberOfItemsInMenu","numberOfListItems","index","child","entries","ariaCurrent","props","isCurrent","Boolean","indexToReplaceAt","propsectiveAction","splice","getValidChildren","children","Children","toArray","filter","isValidElement","undefined","widthToFit","breakpoint","sumsOfChildWidth","childWidth","width","UnderlineNav","_ref","forwardedRef","as","align","ariaLabel","sxProp","afterSelect","variant","loadingCounters","backupRef","navRef","listRef","moreMenuRef","moreMenuBtnRef","containerRef","disclosureWidgetId","theme","getItemsWidth","itemText","_noIconChildWidthArra","find","item","text","swapMenuItemWithListItem","prospectiveListItem","indexOfProspectiveListItem","event","callback","_listRef$current","widthToFitIntoList","availableSpace","current","getBoundingClientRect","getBreakpointForItemSwapping","indexToSliceAt","responsiveProps","itemsLeftInList","slice","updatedItemList","itemsToAddToMenu","updatedMenuItems","setSelectedLinkText","widthToSwap","reverse","selectedLink","setSelectedLink","selectedLinkText","selectEvent","setSelectEvent","setIconsVisible","afterSelectHandler","defaultPrevented","closeOverlay","setResponsiveProps","updatedItems","map","updatedActions","action","displayIcons","onlyMenuVisible","setChildWidthArray","setChildrenWidth","size","arr","newArr","setNoIconChildWidthArray","setNoIconChildrenWidth","resizeObserverEntries","_moreMenuRef$current$","_moreMenuRef$current","contentRect","console","warn","isWidgetOpen","setIsWidgetOpen","focusOnMoreMenuBtn","_moreMenuBtnRef$curre","focus","preventDefault","onClickOutside","ignoreClickRefs","onAnchorClick","button","createElement","Provider","value","ref","role","onClick","trailingAction","Fragment","selectionVariant","id","style","display","actionElementChildren","actionElementProps","Item","onSelect","alignItems","justifyContent","counter"],"sources":["/home/muneeb/assignment-krayo/frontend/node_modules/@primer/react/lib-esm/UnderlineNav2/UnderlineNav.js"],"sourcesContent":["import React__default, { forwardRef, useRef, useState, useEffect, useCallback } from 'react';\nimport sx from '../sx.js';\nimport { UnderlineNavContext } from './UnderlineNavContext.js';\nimport { useResizeObserver } from '../hooks/useResizeObserver.js';\nimport { useTheme } from '../ThemeProvider.js';\nimport VisuallyHidden from '../_VisuallyHidden.js';\nimport { getNavStyles, ulStyles, getDividerStyle, moreBtnStyles, menuStyles, menuItemStyles, GAP } from './styles.js';\nimport styled from 'styled-components';\nimport { LoadingCounter } from './LoadingCounter.js';\nimport { Button } from '../Button/index.js';\nimport { TriangleDownIcon } from '@primer/octicons-react';\nimport { useOnEscapePress } from '../hooks/useOnEscapePress.js';\nimport { useOnOutsideClick } from '../hooks/useOnOutsideClick.js';\nimport { useId } from '../hooks/useId.js';\nimport { ActionList } from '../ActionList/index.js';\nimport { defaultSxProp } from '../utils/defaultSxProp.js';\nimport Box from '../Box/Box.js';\nimport CounterLabel from '../CounterLabel/CounterLabel.js';\nimport merge from 'deepmerge';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n// When page is loaded, we don't have ref for the more button as it is not on the DOM yet.\n// However, we need to calculate number of possible items when the more button present as well. So using the width of the more button as a constant.\nconst MORE_BTN_WIDTH = 86;\n// The height is needed to make sure we don't have a layout shift when the more button is the only item in the nav.\nconst MORE_BTN_HEIGHT = 45;\n\n// Needed this because passing a ref using HTMLULListElement to `Box` causes a type error\nconst NavigationList = styled.ul.withConfig({\n  displayName: \"UnderlineNav__NavigationList\",\n  componentId: \"sc-3wwkh2-0\"\n})([\"\", \";\"], sx);\nconst MoreMenuListItem = styled.li.withConfig({\n  displayName: \"UnderlineNav__MoreMenuListItem\",\n  componentId: \"sc-3wwkh2-1\"\n})([\"display:flex;align-items:center;height:\", \"px;\"], MORE_BTN_HEIGHT);\nconst overflowEffect = (navWidth, moreMenuWidth, childArray, childWidthArray, noIconChildWidthArray, updateListAndMenu) => {\n  let iconsVisible = true;\n  if (childWidthArray.length === 0) {\n    updateListAndMenu({\n      items: childArray,\n      actions: []\n    }, iconsVisible);\n  }\n  const numberOfItemsPossible = calculatePossibleItems(childWidthArray, navWidth);\n  const numberOfItemsWithoutIconPossible = calculatePossibleItems(noIconChildWidthArray, navWidth);\n  // We need to take more menu width into account when calculating the number of items possible\n  const numberOfItemsPossibleWithMoreMenu = calculatePossibleItems(noIconChildWidthArray, navWidth, moreMenuWidth || MORE_BTN_WIDTH);\n  const items = [];\n  const actions = [];\n\n  // First, we check if we can fit all the items with their icons\n  if (childArray.length <= numberOfItemsPossible) {\n    items.push(...childArray);\n  } else if (childArray.length <= numberOfItemsWithoutIconPossible) {\n    // if we can't fit all the items with their icons, we check if we can fit all the items without their icons\n    iconsVisible = false;\n    items.push(...childArray);\n  } else {\n    // if we can't fit all the items without their icons, we keep the icons hidden and show the ones that doesn't fit into the list in the overflow menu\n    iconsVisible = false;\n\n    /* Below is an accessibiility requirement. Never show only one item in the overflow menu.\n     * If there is only one item left to display in the overflow menu according to the calculation,\n     * we need to pull another item from the list into the overflow menu.\n     */\n    const numberOfItemsInMenu = childArray.length - numberOfItemsPossibleWithMoreMenu;\n    const numberOfListItems = numberOfItemsInMenu === 1 ? numberOfItemsPossibleWithMoreMenu - 1 : numberOfItemsPossibleWithMoreMenu;\n    for (const [index, child] of childArray.entries()) {\n      if (index < numberOfListItems) {\n        items.push(child);\n      } else {\n        const ariaCurrent = child.props['aria-current'];\n        const isCurrent = Boolean(ariaCurrent) && ariaCurrent !== 'false';\n        // We need to make sure to keep the selected item always visible.\n        // To do that, we swap the selected item with the last item in the list to make it visible. (When there is at least 1 item in the list to swap.)\n        if (isCurrent && numberOfListItems > 0) {\n          // If selected item couldn't make in to the list, we swap it with the last item in the list.\n          const indexToReplaceAt = numberOfListItems - 1; // because we are replacing the last item in the list\n          // splice method modifies the array by removing 1 item here at the given index and replace it with the \"child\" element then returns the removed item.\n          const propsectiveAction = items.splice(indexToReplaceAt, 1, child)[0];\n          actions.push(propsectiveAction);\n        } else {\n          actions.push(child);\n        }\n      }\n    }\n  }\n  updateListAndMenu({\n    items,\n    actions\n  }, iconsVisible);\n};\nconst getValidChildren = children => {\n  return React__default.Children.toArray(children).filter(child => /*#__PURE__*/React__default.isValidElement(child));\n};\nconst calculatePossibleItems = (childWidthArray, navWidth, moreMenuWidth = 0) => {\n  const widthToFit = navWidth - moreMenuWidth;\n  let breakpoint = childWidthArray.length - 1;\n  let sumsOfChildWidth = 0;\n  for (const [index, childWidth] of childWidthArray.entries()) {\n    if (sumsOfChildWidth > widthToFit) {\n      breakpoint = index - 1;\n      break;\n    } else {\n      // The the gap between items into account when calculating the number of items possible\n      sumsOfChildWidth = sumsOfChildWidth + childWidth.width + GAP;\n    }\n  }\n  return breakpoint;\n};\nconst UnderlineNav = /*#__PURE__*/forwardRef(({\n  as = 'nav',\n  align,\n  'aria-label': ariaLabel,\n  sx: sxProp = defaultSxProp,\n  afterSelect,\n  variant = 'default',\n  loadingCounters = false,\n  children\n}, forwardedRef) => {\n  const backupRef = useRef(null);\n  const navRef = forwardedRef !== null && forwardedRef !== void 0 ? forwardedRef : backupRef;\n  const listRef = useRef(null);\n  const moreMenuRef = useRef(null);\n  const moreMenuBtnRef = useRef(null);\n  const containerRef = React__default.useRef(null);\n  const disclosureWidgetId = useId();\n  const {\n    theme\n  } = useTheme();\n  function getItemsWidth(itemText) {\n    var _noIconChildWidthArra;\n    return ((_noIconChildWidthArra = noIconChildWidthArray.find(item => item.text === itemText)) === null || _noIconChildWidthArra === void 0 ? void 0 : _noIconChildWidthArra.width) || 0;\n  }\n  const swapMenuItemWithListItem = (prospectiveListItem, indexOfProspectiveListItem, event, callback) => {\n    var _listRef$current;\n    // get the selected menu item's width\n    const widthToFitIntoList = getItemsWidth(prospectiveListItem.props.children);\n    // Check if there is any empty space on the right side of the list\n    const availableSpace = navRef.current.getBoundingClientRect().width - (((_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.getBoundingClientRect().width) || 0);\n\n    // Calculate how many items need to be pulled in to the menu to make room for the selected menu item\n    // I.e. if we need to pull 2 items in (index 0 and index 1), breakpoint (index) will return 1.\n    const index = getBreakpointForItemSwapping(widthToFitIntoList, availableSpace);\n    const indexToSliceAt = responsiveProps.items.length - 1 - index;\n    // Form the new list of items\n    const itemsLeftInList = [...responsiveProps.items].slice(0, indexToSliceAt);\n    const updatedItemList = [...itemsLeftInList, prospectiveListItem];\n    // Form the new menu items\n    const itemsToAddToMenu = [...responsiveProps.items].slice(indexToSliceAt);\n    const updatedMenuItems = [...actions];\n    // Add itemsToAddToMenu array's items to the menu at the index of the prospectiveListItem and remove 1 count of items (prospectiveListItem)\n    updatedMenuItems.splice(indexOfProspectiveListItem, 1, ...itemsToAddToMenu);\n    setSelectedLinkText(prospectiveListItem.props.children);\n    callback({\n      items: updatedItemList,\n      actions: updatedMenuItems\n    }, false);\n  };\n  // How many items do we need to pull in to the menu to make room for the selected menu item.\n  function getBreakpointForItemSwapping(widthToFitIntoList, availableSpace) {\n    let widthToSwap = 0;\n    let breakpoint = 0;\n    for (const [index, item] of [...responsiveProps.items].reverse().entries()) {\n      widthToSwap += getItemsWidth(item.props.children);\n      if (widthToFitIntoList < widthToSwap + availableSpace) {\n        breakpoint = index;\n        break;\n      }\n    }\n    return breakpoint;\n  }\n  const [selectedLink, setSelectedLink] = useState(undefined);\n\n  // selectedLinkText is needed to be able set the selected menu item as selectedLink.\n  // This is needed because setSelectedLink only accepts ref but at the time of setting selected menu item as selectedLink, its ref as a list item is not available\n  const [selectedLinkText, setSelectedLinkText] = useState('');\n  // Capture the mouse/keyboard event when a menu item is selected so that we can use it to fire the onSelect callback after the menu item is swapped with the list item\n  const [selectEvent, setSelectEvent] = useState(null);\n  const [iconsVisible, setIconsVisible] = useState(true);\n  const afterSelectHandler = event => {\n    if (!event.defaultPrevented) {\n      if (typeof afterSelect === 'function') afterSelect(event);\n      closeOverlay();\n    }\n  };\n  const [responsiveProps, setResponsiveProps] = useState({\n    items: getValidChildren(children),\n    actions: []\n  });\n\n  /*\n   * This is needed to make sure responsiveProps.items and ResponsiveProps.actions are updated when children are changed\n   * Particually when an item is selected. It adds 'aria-current=\"page\"' attribute to the child and we need to make sure\n   * responsiveProps.items and ResponsiveProps.actions are updated with that attribute\n   */\n  useEffect(() => {\n    const childArray = getValidChildren(children);\n    const updatedItems = responsiveProps.items.map(item => {\n      return childArray.find(child => child.key === item.key) || item;\n    });\n    const updatedActions = responsiveProps.actions.map(action => {\n      return childArray.find(child => child.key === action.key) || action;\n    });\n    setResponsiveProps({\n      items: updatedItems,\n      actions: updatedActions\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [children]);\n  const updateListAndMenu = useCallback((props, displayIcons) => {\n    setResponsiveProps(props);\n    setIconsVisible(displayIcons);\n  }, []);\n  const actions = responsiveProps.actions;\n  // This is the case where the viewport is too narrow to show any list item with the more menu. In this case, we only show the dropdown\n  const onlyMenuVisible = responsiveProps.items.length === 0;\n  const [childWidthArray, setChildWidthArray] = useState([]);\n  const setChildrenWidth = useCallback(size => {\n    setChildWidthArray(arr => {\n      const newArr = [...arr, size];\n      return newArr;\n    });\n  }, []);\n  const [noIconChildWidthArray, setNoIconChildWidthArray] = useState([]);\n  const setNoIconChildrenWidth = useCallback(size => {\n    setNoIconChildWidthArray(arr => {\n      const newArr = [...arr, size];\n      return newArr;\n    });\n  }, []);\n  useResizeObserver(resizeObserverEntries => {\n    var _moreMenuRef$current$, _moreMenuRef$current;\n    const childArray = getValidChildren(children);\n    const navWidth = resizeObserverEntries[0].contentRect.width;\n    const moreMenuWidth = (_moreMenuRef$current$ = (_moreMenuRef$current = moreMenuRef.current) === null || _moreMenuRef$current === void 0 ? void 0 : _moreMenuRef$current.getBoundingClientRect().width) !== null && _moreMenuRef$current$ !== void 0 ? _moreMenuRef$current$ : 0;\n    navWidth !== 0 && overflowEffect(navWidth, moreMenuWidth, childArray, childWidthArray, noIconChildWidthArray, updateListAndMenu);\n  }, navRef);\n  if (!ariaLabel) {\n    // eslint-disable-next-line no-console\n    console.warn('Use the `aria-label` prop to provide an accessible label for assistive technology');\n  }\n  const [isWidgetOpen, setIsWidgetOpen] = useState(false);\n  const closeOverlay = React__default.useCallback(() => {\n    setIsWidgetOpen(false);\n  }, [setIsWidgetOpen]);\n  const focusOnMoreMenuBtn = React__default.useCallback(() => {\n    var _moreMenuBtnRef$curre;\n    (_moreMenuBtnRef$curre = moreMenuBtnRef.current) === null || _moreMenuBtnRef$curre === void 0 ? void 0 : _moreMenuBtnRef$curre.focus();\n  }, []);\n  useOnEscapePress(event => {\n    if (isWidgetOpen) {\n      event.preventDefault();\n      closeOverlay();\n      focusOnMoreMenuBtn();\n    }\n  }, [isWidgetOpen]);\n  useOnOutsideClick({\n    onClickOutside: closeOverlay,\n    containerRef,\n    ignoreClickRefs: [moreMenuBtnRef]\n  });\n  const onAnchorClick = useCallback(event => {\n    if (event.defaultPrevented || event.button !== 0) {\n      return;\n    }\n    setIsWidgetOpen(isWidgetOpen => !isWidgetOpen);\n  }, []);\n  return /*#__PURE__*/React__default.createElement(UnderlineNavContext.Provider, {\n    value: {\n      theme,\n      setChildrenWidth,\n      setNoIconChildrenWidth,\n      selectedLink,\n      setSelectedLink,\n      selectedLinkText,\n      setSelectedLinkText,\n      selectEvent,\n      afterSelect: afterSelectHandler,\n      variant,\n      loadingCounters,\n      iconsVisible\n    }\n  }, ariaLabel && /*#__PURE__*/React__default.createElement(VisuallyHidden, {\n    as: \"h2\"\n  }, `${ariaLabel} navigation`), /*#__PURE__*/React__default.createElement(Box, {\n    as: as,\n    sx: merge(getNavStyles(theme, {\n      align\n    }), sxProp),\n    \"aria-label\": ariaLabel,\n    ref: navRef\n  }, /*#__PURE__*/React__default.createElement(NavigationList, {\n    sx: ulStyles,\n    ref: listRef,\n    role: \"list\"\n  }, responsiveProps.items, actions.length > 0 && /*#__PURE__*/React__default.createElement(MoreMenuListItem, {\n    ref: moreMenuRef\n  }, !onlyMenuVisible && /*#__PURE__*/React__default.createElement(Box, {\n    sx: getDividerStyle(theme)\n  }), /*#__PURE__*/React__default.createElement(Button, {\n    ref: moreMenuBtnRef,\n    sx: moreBtnStyles,\n    \"aria-controls\": disclosureWidgetId,\n    \"aria-expanded\": isWidgetOpen,\n    onClick: onAnchorClick,\n    trailingAction: TriangleDownIcon\n  }, /*#__PURE__*/React__default.createElement(Box, {\n    as: \"span\"\n  }, onlyMenuVisible ? /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(VisuallyHidden, {\n    as: \"span\"\n  }, `${ariaLabel}`, \"\\xA0\"), \"Menu\") : /*#__PURE__*/React__default.createElement(React__default.Fragment, null, \"More\", /*#__PURE__*/React__default.createElement(VisuallyHidden, {\n    as: \"span\"\n  }, \"\\xA0\", `${ariaLabel} items`)))), /*#__PURE__*/React__default.createElement(ActionList, {\n    selectionVariant: \"single\",\n    ref: containerRef,\n    id: disclosureWidgetId,\n    sx: menuStyles,\n    style: {\n      display: isWidgetOpen ? 'block' : 'none'\n    }\n  }, actions.map((action, index) => {\n    const {\n      children: actionElementChildren,\n      ...actionElementProps\n    } = action.props;\n    return /*#__PURE__*/React__default.createElement(Box, {\n      key: actionElementChildren,\n      as: \"li\"\n    }, /*#__PURE__*/React__default.createElement(ActionList.Item, _extends({}, actionElementProps, {\n      as: action.props.as || 'a',\n      sx: menuItemStyles,\n      onSelect: event => {\n        // When there are no items in the list, do not run the swap function as we want to keep everything in the menu.\n        !onlyMenuVisible && swapMenuItemWithListItem(action, index, event, updateListAndMenu);\n        setSelectEvent(event);\n        closeOverlay();\n        focusOnMoreMenuBtn();\n      }\n    }), /*#__PURE__*/React__default.createElement(Box, {\n      as: \"span\",\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      }\n    }, actionElementChildren, loadingCounters ? /*#__PURE__*/React__default.createElement(LoadingCounter, null) : actionElementProps.counter !== undefined && /*#__PURE__*/React__default.createElement(Box, {\n      as: \"span\",\n      \"data-component\": \"counter\"\n    }, /*#__PURE__*/React__default.createElement(CounterLabel, null, actionElementProps.counter)))));\n  }))))));\n});\nUnderlineNav.displayName = 'UnderlineNav';\n\nexport { UnderlineNav };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}