{"ast":null,"code":"import React__default, { useContext, useEffect, createContext, useState } from 'react';\nimport { canUseDOM } from '../utils/environment.js';\nimport { warning } from '../utils/warning.js';\n\n/**\n * `useMedia` will use the given `mediaQueryString` with `matchMedia` to\n * determine if the document matches the media query string.\n *\n * If `MatchMedia` is used as an ancestor, `useMedia` will instead use the\n * value of the media query string, if available\n *\n * @example\n * function Example() {\n *   const coarsePointer = useMedia('(pointer: coarse)');\n *   // ...\n * }\n */\nfunction useMedia(mediaQueryString, defaultState) {\n  const features = useContext(MatchMediaContext);\n  const [matches, setMatches] = React__default.useState(() => {\n    if (features[mediaQueryString] !== undefined) {\n      return features[mediaQueryString];\n    }\n\n    // Prevent a React hydration mismatch when a default value is provided by not defaulting to window.matchMedia(query).matches.\n    if (defaultState !== undefined) {\n      return defaultState;\n    }\n    if (canUseDOM) {\n      return window.matchMedia(mediaQueryString).matches;\n    }\n\n    // A default value has not been provided, and you are rendering on the server, warn of a possible hydration mismatch when defaulting to false.\n    process.env.NODE_ENV !== \"production\" ? warning(true, '`useMedia` When server side rendering, defaultState should be defined to prevent a hydration mismatches.') : void 0;\n    return false;\n  });\n  useEffect(() => {\n    if (features[mediaQueryString] !== undefined) {\n      setMatches(features[mediaQueryString]);\n    }\n  }, [features, mediaQueryString]);\n  useEffect(() => {\n    // If `mediaQueryString` is present in features through `context` defer to\n    // the value present instead of checking with matchMedia\n    if (features[mediaQueryString] !== undefined) {\n      return;\n    }\n    function listener(event) {\n      setMatches(event.matches);\n    }\n    const mediaQueryList = window.matchMedia(mediaQueryString);\n\n    // Support fallback to `addListener` for broader browser support\n    // @ts-ignore this is not present in Safari <14\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (mediaQueryList.addEventListener) {\n      mediaQueryList.addEventListener('change', listener);\n    } else {\n      mediaQueryList.addListener(listener);\n    }\n\n    // Make sure the media query list is in sync with the matches state\n    setMatches(mediaQueryList.matches);\n    return () => {\n      // @ts-ignore this is not present in Safari <14\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (mediaQueryList.addEventListener) {\n        mediaQueryList.removeEventListener('change', listener);\n      } else {\n        mediaQueryList.removeListener(listener);\n      }\n    };\n  }, [features, mediaQueryString]);\n  return matches;\n}\n// Used to keep track of overrides to specific media query features, this should\n// be used for development and demo purposes to emulate specific features if\n// unavailable through devtools\nconst MatchMediaContext = /*#__PURE__*/createContext({});\nconst defaultFeatures = {};\n\n/**\n * Use `MatchMedia` to emulate media conditions by passing in feature\n * queries to the `features` prop. If a component uses `useMedia` with the\n * feature passed in to `MatchMedia` it will force its value to match what is\n * provided to `MatchMedia`\n *\n * This should be used for development and documentation only in situations\n * where devtools cannot emulate this feature\n *\n * @example\n * <MatchMedia features={{ \"(pointer: coarse)\": true}}>\n *   <Children />\n * </MatchMedia>\n */\nfunction MatchMedia(_ref) {\n  let {\n    children,\n    features = defaultFeatures\n  } = _ref;\n  const value = useShallowObject(features);\n  return /*#__PURE__*/React__default.createElement(MatchMediaContext.Provider, {\n    value: value\n  }, children);\n}\nMatchMedia.displayName = \"MatchMedia\";\n/**\n * Utility hook to provide a stable identity for a \"simple\" object which\n * contains only primitive values. This provides a `useMemo`-esque signature\n * without dealing with shallow equality checks in the dependency array.\n *\n * Note (perf): this hook iterates through keys and values of the object if the\n * shallow equality check is false each time the hook is called\n */\nfunction useShallowObject(object) {\n  const [value, setValue] = useState(object);\n  if (value !== object) {\n    const match = Object.keys(object).every(key => {\n      return object[key] === value[key];\n    });\n    if (!match) {\n      setValue(object);\n    }\n  }\n  return value;\n}\nexport { MatchMedia, useMedia };","map":{"version":3,"names":["React__default","useContext","useEffect","createContext","useState","canUseDOM","warning","useMedia","mediaQueryString","defaultState","features","MatchMediaContext","matches","setMatches","undefined","window","matchMedia","process","env","NODE_ENV","listener","event","mediaQueryList","addEventListener","addListener","removeEventListener","removeListener","defaultFeatures","MatchMedia","_ref","children","value","useShallowObject","createElement","Provider","displayName","object","setValue","match","Object","keys","every","key"],"sources":["/home/muneeb/assignment-krayo/frontend/node_modules/@primer/react/lib-esm/hooks/useMedia.js"],"sourcesContent":["import React__default, { useContext, useEffect, createContext, useState } from 'react';\nimport { canUseDOM } from '../utils/environment.js';\nimport { warning } from '../utils/warning.js';\n\n/**\n * `useMedia` will use the given `mediaQueryString` with `matchMedia` to\n * determine if the document matches the media query string.\n *\n * If `MatchMedia` is used as an ancestor, `useMedia` will instead use the\n * value of the media query string, if available\n *\n * @example\n * function Example() {\n *   const coarsePointer = useMedia('(pointer: coarse)');\n *   // ...\n * }\n */\nfunction useMedia(mediaQueryString, defaultState) {\n  const features = useContext(MatchMediaContext);\n  const [matches, setMatches] = React__default.useState(() => {\n    if (features[mediaQueryString] !== undefined) {\n      return features[mediaQueryString];\n    }\n\n    // Prevent a React hydration mismatch when a default value is provided by not defaulting to window.matchMedia(query).matches.\n    if (defaultState !== undefined) {\n      return defaultState;\n    }\n    if (canUseDOM) {\n      return window.matchMedia(mediaQueryString).matches;\n    }\n\n    // A default value has not been provided, and you are rendering on the server, warn of a possible hydration mismatch when defaulting to false.\n    process.env.NODE_ENV !== \"production\" ? warning(true, '`useMedia` When server side rendering, defaultState should be defined to prevent a hydration mismatches.') : void 0;\n    return false;\n  });\n  useEffect(() => {\n    if (features[mediaQueryString] !== undefined) {\n      setMatches(features[mediaQueryString]);\n    }\n  }, [features, mediaQueryString]);\n  useEffect(() => {\n    // If `mediaQueryString` is present in features through `context` defer to\n    // the value present instead of checking with matchMedia\n    if (features[mediaQueryString] !== undefined) {\n      return;\n    }\n    function listener(event) {\n      setMatches(event.matches);\n    }\n    const mediaQueryList = window.matchMedia(mediaQueryString);\n\n    // Support fallback to `addListener` for broader browser support\n    // @ts-ignore this is not present in Safari <14\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (mediaQueryList.addEventListener) {\n      mediaQueryList.addEventListener('change', listener);\n    } else {\n      mediaQueryList.addListener(listener);\n    }\n\n    // Make sure the media query list is in sync with the matches state\n    setMatches(mediaQueryList.matches);\n    return () => {\n      // @ts-ignore this is not present in Safari <14\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (mediaQueryList.addEventListener) {\n        mediaQueryList.removeEventListener('change', listener);\n      } else {\n        mediaQueryList.removeListener(listener);\n      }\n    };\n  }, [features, mediaQueryString]);\n  return matches;\n}\n// Used to keep track of overrides to specific media query features, this should\n// be used for development and demo purposes to emulate specific features if\n// unavailable through devtools\nconst MatchMediaContext = /*#__PURE__*/createContext({});\nconst defaultFeatures = {};\n\n/**\n * Use `MatchMedia` to emulate media conditions by passing in feature\n * queries to the `features` prop. If a component uses `useMedia` with the\n * feature passed in to `MatchMedia` it will force its value to match what is\n * provided to `MatchMedia`\n *\n * This should be used for development and documentation only in situations\n * where devtools cannot emulate this feature\n *\n * @example\n * <MatchMedia features={{ \"(pointer: coarse)\": true}}>\n *   <Children />\n * </MatchMedia>\n */\nfunction MatchMedia({\n  children,\n  features = defaultFeatures\n}) {\n  const value = useShallowObject(features);\n  return /*#__PURE__*/React__default.createElement(MatchMediaContext.Provider, {\n    value: value\n  }, children);\n}\nMatchMedia.displayName = \"MatchMedia\";\n/**\n * Utility hook to provide a stable identity for a \"simple\" object which\n * contains only primitive values. This provides a `useMemo`-esque signature\n * without dealing with shallow equality checks in the dependency array.\n *\n * Note (perf): this hook iterates through keys and values of the object if the\n * shallow equality check is false each time the hook is called\n */\nfunction useShallowObject(object) {\n  const [value, setValue] = useState(object);\n  if (value !== object) {\n    const match = Object.keys(object).every(key => {\n      return object[key] === value[key];\n    });\n    if (!match) {\n      setValue(object);\n    }\n  }\n  return value;\n}\n\nexport { MatchMedia, useMedia };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}