{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { GoogleLogin } from \"@react-oauth/google\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const Loginwithgoogle = ({ isLoggedin, setLoggedin }) => {\n//   const navigate = useNavigate();\n//   // const [isLoggedin, setLoggedin] = useState(false);\n\n//   const handleSuccess = (credentialResponse) => {\n//     console.log(credentialResponse);\n//     setLoggedin(true);\n//     navigate(\"/home\");\n//   };\n\n//   return (\n//     <GoogleLogin\n//       onSuccess={handleSuccess}\n//       onError={() => {\n//         console.log(\"Login Failed\");\n//       }}\n//     />\n//   );\n// };\n// export default Loginwithgoogle;\nimport React from \"react\";\nimport { OAuth2Client } from \"react-oauth/google\";\nimport axios from \"axios\";\nconst googleClientId = \"1004046358549-4he79a4vc7os6t8g3agc299t6r1j3ndm.apps.googleusercontent.com\";\nconst googleOAuthClient = new OAuth2Client(googleClientId);\nconst handleGoogleLogin = async () => {\n  try {\n    const response = await googleOAuthClient.login();\n    const accessToken = response.credentials.accessToken;\n    const serverResponse = await axios.post(\"/api/google-login\", {\n      accessToken\n    });\n    localStorage.setItem(\"accessToken\", serverResponse.data.accessToken);\n    window.location.href = \"/home\";\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"names":["React","OAuth2Client","axios","googleClientId","googleOAuthClient","handleGoogleLogin","response","login","accessToken","credentials","serverResponse","post","localStorage","setItem","data","window","location","href","error","console"],"sources":["/home/muneeb/assignment-krayo/frontend/src/components/LoginWithGoogle.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { GoogleLogin } from \"@react-oauth/google\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const Loginwithgoogle = ({ isLoggedin, setLoggedin }) => {\n//   const navigate = useNavigate();\n//   // const [isLoggedin, setLoggedin] = useState(false);\n\n//   const handleSuccess = (credentialResponse) => {\n//     console.log(credentialResponse);\n//     setLoggedin(true);\n//     navigate(\"/home\");\n//   };\n\n//   return (\n//     <GoogleLogin\n//       onSuccess={handleSuccess}\n//       onError={() => {\n//         console.log(\"Login Failed\");\n//       }}\n//     />\n//   );\n// };\n// export default Loginwithgoogle;\nimport React from \"react\";\nimport { OAuth2Client } from \"react-oauth/google\";\nimport axios from \"axios\";\n\nconst googleClientId =\n  \"1004046358549-4he79a4vc7os6t8g3agc299t6r1j3ndm.apps.googleusercontent.com\";\nconst googleOAuthClient = new OAuth2Client(googleClientId);\n\nconst handleGoogleLogin = async () => {\n  try {\n    const response = await googleOAuthClient.login();\n    const accessToken = response.credentials.accessToken;\n    const serverResponse = await axios.post(\"/api/google-login\", {\n      accessToken,\n    });\n    localStorage.setItem(\"accessToken\", serverResponse.data.accessToken);\n    window.location.href = \"/home\";\n  } catch (error) {\n    console.error(error);\n  }\n};\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,oBAAoB;AACjD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAc,GAClB,2EAA2E;AAC7E,MAAMC,iBAAiB,GAAG,IAAIH,YAAY,CAACE,cAAc,CAAC;AAE1D,MAAME,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,iBAAiB,CAACG,KAAK,EAAE;IAChD,MAAMC,WAAW,GAAGF,QAAQ,CAACG,WAAW,CAACD,WAAW;IACpD,MAAME,cAAc,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,mBAAmB,EAAE;MAC3DH;IACF,CAAC,CAAC;IACFI,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEH,cAAc,CAACI,IAAI,CAACN,WAAW,CAAC;IACpEO,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}