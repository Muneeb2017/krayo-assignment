{"ast":null,"code":"import React__default from 'react';\nimport { warning } from '../utils/warning.js';\n\n/**\n * Extract components from `children` so we can render them in different places,\n * allowing us to implement components with SSR-compatible slot APIs.\n * Note: We can only extract direct children, not nested ones.\n */\nfunction useSlots(children, config) {\n  // Object mapping slot names to their elements\n  const slots = mapValues(config, () => undefined);\n\n  // Array of elements that are not slots\n  const rest = [];\n  const keys = Object.keys(config);\n  const values = Object.values(config);\n\n  // eslint-disable-next-line github/array-foreach\n  React__default.Children.forEach(children, child => {\n    if (! /*#__PURE__*/React__default.isValidElement(child)) {\n      rest.push(child);\n      return;\n    }\n    const index = values.findIndex(value => {\n      return child.type === value;\n    });\n\n    // If the child is not a slot, add it to the `rest` array\n    if (index === -1) {\n      rest.push(child);\n      return;\n    }\n    const slotKey = keys[index];\n\n    // If slot is already filled, ignore duplicates\n    if (slots[slotKey]) {\n      process.env.NODE_ENV !== \"production\" ? warning(true, `Found duplicate \"${String(slotKey)}\" slot. Only the first will be rendered.`) : void 0;\n      return;\n    }\n\n    // If the child is a slot, add it to the `slots` object\n    slots[slotKey] = child;\n  });\n  return [slots, rest];\n}\n\n/** Map the values of an object */\nfunction mapValues(obj, fn) {\n  return Object.keys(obj).reduce((result, key) => {\n    result[key] = fn(obj[key]);\n    return result;\n  }, {});\n}\nexport { useSlots };","map":{"version":3,"names":["React__default","warning","useSlots","children","config","slots","mapValues","undefined","rest","keys","Object","values","Children","forEach","child","isValidElement","push","index","findIndex","value","type","slotKey","process","env","NODE_ENV","String","obj","fn","reduce","result","key"],"sources":["/home/muneeb/assignment-krayo/frontend/node_modules/@primer/react/lib-esm/hooks/useSlots.js"],"sourcesContent":["import React__default from 'react';\nimport { warning } from '../utils/warning.js';\n\n/**\n * Extract components from `children` so we can render them in different places,\n * allowing us to implement components with SSR-compatible slot APIs.\n * Note: We can only extract direct children, not nested ones.\n */\nfunction useSlots(children, config) {\n  // Object mapping slot names to their elements\n  const slots = mapValues(config, () => undefined);\n\n  // Array of elements that are not slots\n  const rest = [];\n  const keys = Object.keys(config);\n  const values = Object.values(config);\n\n  // eslint-disable-next-line github/array-foreach\n  React__default.Children.forEach(children, child => {\n    if (! /*#__PURE__*/React__default.isValidElement(child)) {\n      rest.push(child);\n      return;\n    }\n    const index = values.findIndex(value => {\n      return child.type === value;\n    });\n\n    // If the child is not a slot, add it to the `rest` array\n    if (index === -1) {\n      rest.push(child);\n      return;\n    }\n    const slotKey = keys[index];\n\n    // If slot is already filled, ignore duplicates\n    if (slots[slotKey]) {\n      process.env.NODE_ENV !== \"production\" ? warning(true, `Found duplicate \"${String(slotKey)}\" slot. Only the first will be rendered.`) : void 0;\n      return;\n    }\n\n    // If the child is a slot, add it to the `slots` object\n    slots[slotKey] = child;\n  });\n  return [slots, rest];\n}\n\n/** Map the values of an object */\nfunction mapValues(obj, fn) {\n  return Object.keys(obj).reduce((result, key) => {\n    result[key] = fn(obj[key]);\n    return result;\n  }, {});\n}\n\nexport { useSlots };\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,OAAO;AAClC,SAASC,OAAO,QAAQ,qBAAqB;;AAE7C;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQA,CAACC,QAAQ,EAAEC,MAAM,EAAE;EAClC;EACA,MAAMC,KAAK,GAAGC,SAAS,CAACF,MAAM,EAAE,MAAMG,SAAS,CAAC;;EAEhD;EACA,MAAMC,IAAI,GAAG,EAAE;EACf,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACL,MAAM,CAAC;EAChC,MAAMO,MAAM,GAAGD,MAAM,CAACC,MAAM,CAACP,MAAM,CAAC;;EAEpC;EACAJ,cAAc,CAACY,QAAQ,CAACC,OAAO,CAACV,QAAQ,EAAEW,KAAK,IAAI;IACjD,IAAI,EAAE,aAAad,cAAc,CAACe,cAAc,CAACD,KAAK,CAAC,EAAE;MACvDN,IAAI,CAACQ,IAAI,CAACF,KAAK,CAAC;MAChB;IACF;IACA,MAAMG,KAAK,GAAGN,MAAM,CAACO,SAAS,CAACC,KAAK,IAAI;MACtC,OAAOL,KAAK,CAACM,IAAI,KAAKD,KAAK;IAC7B,CAAC,CAAC;;IAEF;IACA,IAAIF,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBT,IAAI,CAACQ,IAAI,CAACF,KAAK,CAAC;MAChB;IACF;IACA,MAAMO,OAAO,GAAGZ,IAAI,CAACQ,KAAK,CAAC;;IAE3B;IACA,IAAIZ,KAAK,CAACgB,OAAO,CAAC,EAAE;MAClBC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGvB,OAAO,CAAC,IAAI,EAAG,oBAAmBwB,MAAM,CAACJ,OAAO,CAAE,0CAAyC,CAAC,GAAG,KAAK,CAAC;MAC7I;IACF;;IAEA;IACAhB,KAAK,CAACgB,OAAO,CAAC,GAAGP,KAAK;EACxB,CAAC,CAAC;EACF,OAAO,CAACT,KAAK,EAAEG,IAAI,CAAC;AACtB;;AAEA;AACA,SAASF,SAASA,CAACoB,GAAG,EAAEC,EAAE,EAAE;EAC1B,OAAOjB,MAAM,CAACD,IAAI,CAACiB,GAAG,CAAC,CAACE,MAAM,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;IAC9CD,MAAM,CAACC,GAAG,CAAC,GAAGH,EAAE,CAACD,GAAG,CAACI,GAAG,CAAC,CAAC;IAC1B,OAAOD,MAAM;EACf,CAAC,EAAE,CAAC,CAAC,CAAC;AACR;AAEA,SAAS3B,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}