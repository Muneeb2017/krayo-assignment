{"ast":null,"code":"import React__default, { useContext, useState, useCallback, useEffect } from 'react';\nimport { AutocompleteContext } from './AutocompleteContext.js';\nimport { useRefObjectAsForwardedRef } from '../hooks/useRefObjectAsForwardedRef.js';\nimport useSafeTimeout from '../hooks/useSafeTimeout.js';\nimport TextInput from '../TextInput/TextInput.js';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nconst AutocompleteInput = /*#__PURE__*/React__default.forwardRef((_ref, forwardedRef) => {\n  let {\n    as: Component = TextInput,\n    onFocus,\n    onBlur,\n    onChange,\n    onKeyDown,\n    onKeyUp,\n    onKeyPress,\n    value,\n    ...props\n  } = _ref;\n  const autocompleteContext = useContext(AutocompleteContext);\n  if (autocompleteContext === null) {\n    throw new Error('AutocompleteContext returned null values');\n  }\n  const {\n    activeDescendantRef,\n    autocompleteSuggestion = '',\n    id,\n    inputRef,\n    inputValue = '',\n    isMenuDirectlyActivated,\n    setInputValue,\n    setShowMenu,\n    showMenu\n  } = autocompleteContext;\n  useRefObjectAsForwardedRef(forwardedRef, inputRef);\n  const [highlightRemainingText, setHighlightRemainingText] = useState(true);\n  const {\n    safeSetTimeout\n  } = useSafeTimeout();\n  const handleInputFocus = useCallback(event => {\n    onFocus && onFocus(event);\n    setShowMenu(true);\n  }, [onFocus, setShowMenu]);\n  const handleInputBlur = useCallback(event => {\n    onBlur && onBlur(event);\n\n    // HACK: wait a tick and check the focused element before hiding the autocomplete menu\n    // this prevents the menu from hiding when the user is clicking an option in the Autoselect.Menu,\n    // but still hides the menu when the user blurs the input by tabbing out or clicking somewhere else on the page\n    safeSetTimeout(() => {\n      if (document.activeElement !== inputRef.current) {\n        setShowMenu(false);\n      }\n    }, 0);\n  }, [onBlur, setShowMenu, inputRef, safeSetTimeout]);\n  const handleInputChange = useCallback(event => {\n    onChange && onChange(event);\n    setInputValue(event.currentTarget.value);\n    if (!showMenu) {\n      setShowMenu(true);\n    }\n  }, [onChange, setInputValue, setShowMenu, showMenu]);\n  const handleInputKeyDown = useCallback(event => {\n    var _inputRef$current;\n    onKeyDown && onKeyDown(event);\n    if (event.key === 'Backspace') {\n      setHighlightRemainingText(false);\n    }\n    if (event.key === 'Escape' && (_inputRef$current = inputRef.current) !== null && _inputRef$current !== void 0 && _inputRef$current.value) {\n      setInputValue('');\n      inputRef.current.value = '';\n    }\n  }, [inputRef, setInputValue, setHighlightRemainingText, onKeyDown]);\n  const handleInputKeyUp = useCallback(event => {\n    onKeyUp && onKeyUp(event);\n    if (event.key === 'Backspace') {\n      setHighlightRemainingText(true);\n    }\n  }, [setHighlightRemainingText, onKeyUp]);\n  const onInputKeyPress = useCallback(event => {\n    onKeyPress && onKeyPress(event);\n    if (showMenu && event.key === 'Enter' && activeDescendantRef.current) {\n      event.preventDefault();\n      event.nativeEvent.stopImmediatePropagation();\n\n      // Forward Enter key press to active descendant so that item gets activated\n      const activeDescendantEvent = new KeyboardEvent(event.type, event.nativeEvent);\n      activeDescendantRef.current.dispatchEvent(activeDescendantEvent);\n    }\n  }, [activeDescendantRef, showMenu, onKeyPress]);\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    // resets input value to being empty after a selection has been made\n    if (!autocompleteSuggestion) {\n      inputRef.current.value = inputValue;\n    }\n\n    // TODO: fix bug where this function prevents `onChange` from being triggered if the highlighted item text\n    //       is the same as what I'm typing\n    //       e.g.: typing 'tw' highlights 'two', but when I 'two', the text input change does not get triggered\n    if (highlightRemainingText && autocompleteSuggestion && (inputValue || isMenuDirectlyActivated)) {\n      inputRef.current.value = autocompleteSuggestion;\n      if (autocompleteSuggestion.toLowerCase().indexOf(inputValue.toLowerCase()) === 0) {\n        inputRef.current.setSelectionRange(inputValue.length, autocompleteSuggestion.length);\n      }\n    }\n\n    // calling this useEffect when `highlightRemainingText` changes breaks backspace functionality\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [autocompleteSuggestion, inputValue, inputRef, isMenuDirectlyActivated]);\n  useEffect(() => {\n    setInputValue(typeof value !== 'undefined' ? value.toString() : '');\n  }, [value, setInputValue]);\n  return /*#__PURE__*/React__default.createElement(Component, _extends({\n    onFocus: handleInputFocus,\n    onBlur: handleInputBlur,\n    onChange: handleInputChange,\n    onKeyDown: handleInputKeyDown,\n    onKeyPress: onInputKeyPress,\n    onKeyUp: handleInputKeyUp,\n    ref: inputRef,\n    \"aria-controls\": `${id}-listbox`,\n    \"aria-autocomplete\": \"both\",\n    role: \"combobox\",\n    \"aria-expanded\": showMenu,\n    \"aria-haspopup\": \"listbox\",\n    \"aria-owns\": `${id}-listbox`,\n    autoComplete: \"off\",\n    id: id\n  }, props));\n});\nAutocompleteInput.displayName = 'AutocompleteInput';\nvar AutocompleteInput$1 = AutocompleteInput;\nexport { AutocompleteInput$1 as default };","map":{"version":3,"names":["React__default","useContext","useState","useCallback","useEffect","AutocompleteContext","useRefObjectAsForwardedRef","useSafeTimeout","TextInput","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","AutocompleteInput","forwardRef","_ref","forwardedRef","as","Component","onFocus","onBlur","onChange","onKeyDown","onKeyUp","onKeyPress","value","props","autocompleteContext","Error","activeDescendantRef","autocompleteSuggestion","id","inputRef","inputValue","isMenuDirectlyActivated","setInputValue","setShowMenu","showMenu","highlightRemainingText","setHighlightRemainingText","safeSetTimeout","handleInputFocus","event","handleInputBlur","document","activeElement","current","handleInputChange","currentTarget","handleInputKeyDown","_inputRef$current","handleInputKeyUp","onInputKeyPress","preventDefault","nativeEvent","stopImmediatePropagation","activeDescendantEvent","KeyboardEvent","type","dispatchEvent","toLowerCase","indexOf","setSelectionRange","toString","createElement","ref","role","autoComplete","displayName","AutocompleteInput$1","default"],"sources":["/home/muneeb/assignment-krayo/frontend/node_modules/@primer/react/lib-esm/Autocomplete/AutocompleteInput.js"],"sourcesContent":["import React__default, { useContext, useState, useCallback, useEffect } from 'react';\nimport { AutocompleteContext } from './AutocompleteContext.js';\nimport { useRefObjectAsForwardedRef } from '../hooks/useRefObjectAsForwardedRef.js';\nimport useSafeTimeout from '../hooks/useSafeTimeout.js';\nimport TextInput from '../TextInput/TextInput.js';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nconst AutocompleteInput = /*#__PURE__*/React__default.forwardRef(({\n  as: Component = TextInput,\n  onFocus,\n  onBlur,\n  onChange,\n  onKeyDown,\n  onKeyUp,\n  onKeyPress,\n  value,\n  ...props\n}, forwardedRef) => {\n  const autocompleteContext = useContext(AutocompleteContext);\n  if (autocompleteContext === null) {\n    throw new Error('AutocompleteContext returned null values');\n  }\n  const {\n    activeDescendantRef,\n    autocompleteSuggestion = '',\n    id,\n    inputRef,\n    inputValue = '',\n    isMenuDirectlyActivated,\n    setInputValue,\n    setShowMenu,\n    showMenu\n  } = autocompleteContext;\n  useRefObjectAsForwardedRef(forwardedRef, inputRef);\n  const [highlightRemainingText, setHighlightRemainingText] = useState(true);\n  const {\n    safeSetTimeout\n  } = useSafeTimeout();\n  const handleInputFocus = useCallback(event => {\n    onFocus && onFocus(event);\n    setShowMenu(true);\n  }, [onFocus, setShowMenu]);\n  const handleInputBlur = useCallback(event => {\n    onBlur && onBlur(event);\n\n    // HACK: wait a tick and check the focused element before hiding the autocomplete menu\n    // this prevents the menu from hiding when the user is clicking an option in the Autoselect.Menu,\n    // but still hides the menu when the user blurs the input by tabbing out or clicking somewhere else on the page\n    safeSetTimeout(() => {\n      if (document.activeElement !== inputRef.current) {\n        setShowMenu(false);\n      }\n    }, 0);\n  }, [onBlur, setShowMenu, inputRef, safeSetTimeout]);\n  const handleInputChange = useCallback(event => {\n    onChange && onChange(event);\n    setInputValue(event.currentTarget.value);\n    if (!showMenu) {\n      setShowMenu(true);\n    }\n  }, [onChange, setInputValue, setShowMenu, showMenu]);\n  const handleInputKeyDown = useCallback(event => {\n    var _inputRef$current;\n    onKeyDown && onKeyDown(event);\n    if (event.key === 'Backspace') {\n      setHighlightRemainingText(false);\n    }\n    if (event.key === 'Escape' && (_inputRef$current = inputRef.current) !== null && _inputRef$current !== void 0 && _inputRef$current.value) {\n      setInputValue('');\n      inputRef.current.value = '';\n    }\n  }, [inputRef, setInputValue, setHighlightRemainingText, onKeyDown]);\n  const handleInputKeyUp = useCallback(event => {\n    onKeyUp && onKeyUp(event);\n    if (event.key === 'Backspace') {\n      setHighlightRemainingText(true);\n    }\n  }, [setHighlightRemainingText, onKeyUp]);\n  const onInputKeyPress = useCallback(event => {\n    onKeyPress && onKeyPress(event);\n    if (showMenu && event.key === 'Enter' && activeDescendantRef.current) {\n      event.preventDefault();\n      event.nativeEvent.stopImmediatePropagation();\n\n      // Forward Enter key press to active descendant so that item gets activated\n      const activeDescendantEvent = new KeyboardEvent(event.type, event.nativeEvent);\n      activeDescendantRef.current.dispatchEvent(activeDescendantEvent);\n    }\n  }, [activeDescendantRef, showMenu, onKeyPress]);\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    // resets input value to being empty after a selection has been made\n    if (!autocompleteSuggestion) {\n      inputRef.current.value = inputValue;\n    }\n\n    // TODO: fix bug where this function prevents `onChange` from being triggered if the highlighted item text\n    //       is the same as what I'm typing\n    //       e.g.: typing 'tw' highlights 'two', but when I 'two', the text input change does not get triggered\n    if (highlightRemainingText && autocompleteSuggestion && (inputValue || isMenuDirectlyActivated)) {\n      inputRef.current.value = autocompleteSuggestion;\n      if (autocompleteSuggestion.toLowerCase().indexOf(inputValue.toLowerCase()) === 0) {\n        inputRef.current.setSelectionRange(inputValue.length, autocompleteSuggestion.length);\n      }\n    }\n\n    // calling this useEffect when `highlightRemainingText` changes breaks backspace functionality\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [autocompleteSuggestion, inputValue, inputRef, isMenuDirectlyActivated]);\n  useEffect(() => {\n    setInputValue(typeof value !== 'undefined' ? value.toString() : '');\n  }, [value, setInputValue]);\n  return /*#__PURE__*/React__default.createElement(Component, _extends({\n    onFocus: handleInputFocus,\n    onBlur: handleInputBlur,\n    onChange: handleInputChange,\n    onKeyDown: handleInputKeyDown,\n    onKeyPress: onInputKeyPress,\n    onKeyUp: handleInputKeyUp,\n    ref: inputRef,\n    \"aria-controls\": `${id}-listbox`,\n    \"aria-autocomplete\": \"both\",\n    role: \"combobox\",\n    \"aria-expanded\": showMenu,\n    \"aria-haspopup\": \"listbox\",\n    \"aria-owns\": `${id}-listbox`,\n    autoComplete: \"off\",\n    id: id\n  }, props));\n});\nAutocompleteInput.displayName = 'AutocompleteInput';\nvar AutocompleteInput$1 = AutocompleteInput;\n\nexport { AutocompleteInput$1 as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}