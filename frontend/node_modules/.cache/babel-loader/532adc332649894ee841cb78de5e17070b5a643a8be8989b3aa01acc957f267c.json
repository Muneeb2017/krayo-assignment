{"ast":null,"code":"import React__default from 'react';\nimport styled from 'styled-components';\nimport { get } from '../../constants.js';\nconst StyledDivider = styled.div.withConfig({\n  displayName: \"Divider__StyledDivider\",\n  componentId: \"sc-1s7tlfq-0\"\n})([\"height:1px;background:\", \";margin-top:calc(\", \" - 1px);margin-bottom:\", \";\"], get('colors.border.muted'), get('space.2'), get('space.2'));\n\n/**\n * Visually separates `Item`s or `Group`s in an `ActionList`.\n */\nfunction Divider() {\n  return /*#__PURE__*/React__default.createElement(StyledDivider, null);\n}\nDivider.displayName = \"Divider\";\n/**\n * `Divider` fulfills the `ItemPropsWithCustomRenderer` contract,\n * so it can be used inline in an `ActionList`’s `items` prop.\n * In other words, `items={[ActionList.Divider]}` is supported as a concise\n * alternative to `items={[{renderItem: () => <ActionList.Divider />}]}`.\n */\nDivider.renderItem = Divider;\nexport { Divider, StyledDivider };","map":{"version":3,"names":["React__default","styled","get","StyledDivider","div","withConfig","displayName","componentId","Divider","createElement","renderItem"],"sources":["/home/muneeb/assignment-krayo/frontend/node_modules/@primer/react/lib-esm/deprecated/ActionList/Divider.js"],"sourcesContent":["import React__default from 'react';\nimport styled from 'styled-components';\nimport { get } from '../../constants.js';\n\nconst StyledDivider = styled.div.withConfig({\n  displayName: \"Divider__StyledDivider\",\n  componentId: \"sc-1s7tlfq-0\"\n})([\"height:1px;background:\", \";margin-top:calc(\", \" - 1px);margin-bottom:\", \";\"], get('colors.border.muted'), get('space.2'), get('space.2'));\n\n/**\n * Visually separates `Item`s or `Group`s in an `ActionList`.\n */\nfunction Divider() {\n  return /*#__PURE__*/React__default.createElement(StyledDivider, null);\n}\nDivider.displayName = \"Divider\";\n/**\n * `Divider` fulfills the `ItemPropsWithCustomRenderer` contract,\n * so it can be used inline in an `ActionList`’s `items` prop.\n * In other words, `items={[ActionList.Divider]}` is supported as a concise\n * alternative to `items={[{renderItem: () => <ActionList.Divider />}]}`.\n */\nDivider.renderItem = Divider;\n\nexport { Divider, StyledDivider };\n"],"mappings":"AAAA,OAAOA,cAAc,MAAM,OAAO;AAClC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,GAAG,QAAQ,oBAAoB;AAExC,MAAMC,aAAa,GAAGF,MAAM,CAACG,GAAG,CAACC,UAAU,CAAC;EAC1CC,WAAW,EAAE,wBAAwB;EACrCC,WAAW,EAAE;AACf,CAAC,CAAC,CAAC,CAAC,wBAAwB,EAAE,mBAAmB,EAAE,wBAAwB,EAAE,GAAG,CAAC,EAAEL,GAAG,CAAC,qBAAqB,CAAC,EAAEA,GAAG,CAAC,SAAS,CAAC,EAAEA,GAAG,CAAC,SAAS,CAAC,CAAC;;AAE9I;AACA;AACA;AACA,SAASM,OAAOA,CAAA,EAAG;EACjB,OAAO,aAAaR,cAAc,CAACS,aAAa,CAACN,aAAa,EAAE,IAAI,CAAC;AACvE;AACAK,OAAO,CAACF,WAAW,GAAG,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACAE,OAAO,CAACE,UAAU,GAAGF,OAAO;AAE5B,SAASA,OAAO,EAAEL,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}