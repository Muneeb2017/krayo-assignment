{"ast":null,"code":"import classnames from 'classnames';\nimport React__default, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { get } from '../constants.js';\nimport { useFocusZone } from '../hooks/useFocusZone.js';\nimport sx from '../sx.js';\nimport getGlobalFocusStyles from '../_getGlobalFocusStyles.js';\nimport { FocusKeys } from '@primer/behaviors';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nconst ITEM_CLASS = 'TabNav-item';\nconst SELECTED_CLASS = 'selected';\nconst TabNavBase = styled.div.withConfig({\n  displayName: \"TabNav__TabNavBase\",\n  componentId: \"sc-pwdi4r-0\"\n})([\"\", \"\"], sx);\nconst TabNavTabList = styled.div.withConfig({\n  displayName: \"TabNav__TabNavTabList\",\n  componentId: \"sc-pwdi4r-1\"\n})([\"display:flex;margin-bottom:-1px;overflow:auto;\"]);\nconst TabNavNav = styled.nav.withConfig({\n  displayName: \"TabNav__TabNavNav\",\n  componentId: \"sc-pwdi4r-2\"\n})([\"margin-top:0;border-bottom:1px solid \", \";\"], get('colors.border.default'));\nfunction TabNav(_ref2) {\n  let {\n    children,\n    'aria-label': ariaLabel,\n    ...rest\n  } = _ref2;\n  const customContainerRef = useRef(null);\n\n  // Detect if the TabNav is inside an ActionMenu.\n  const [isInsideMenu, setIsInsideMenu] = useState(false);\n  React__default.useEffect(() => {\n    if (customContainerRef.current) {\n      const menu = customContainerRef.current.closest('[role=menu]');\n      if (menu) {\n        setIsInsideMenu(true);\n      }\n    }\n  }, [customContainerRef]);\n  const customStrategy = React__default.useCallback(() => {\n    var _customContainerRef$c, _customContainerRef$c2, _ref;\n    const selectedTab = (_customContainerRef$c = customContainerRef.current) === null || _customContainerRef$c === void 0 ? void 0 : _customContainerRef$c.querySelector('[role=tab][aria-selected=true]');\n    const firstTab = (_customContainerRef$c2 = customContainerRef.current) === null || _customContainerRef$c2 === void 0 ? void 0 : _customContainerRef$c2.querySelector('[role=tab]');\n    return (_ref = selectedTab !== null && selectedTab !== void 0 ? selectedTab : firstTab) !== null && _ref !== void 0 ? _ref : undefined;\n  }, [customContainerRef]);\n  const {\n    containerRef: navRef\n  } = useFocusZone({\n    containerRef: customContainerRef,\n    bindKeys: FocusKeys.ArrowHorizontal | FocusKeys.HomeAndEnd,\n    focusOutBehavior: 'wrap',\n    // Use 'previous' strategy when inside an ActionMenu to avoid\n    // conflicting with the ActionMenu's focus zone.\n    //\n    // WARNING: We don't recommend using TabNav inside an ActionMenu.\n    // This is a workaround to avoid breaking existing code.\n    focusInStrategy: isInsideMenu ? 'previous' : customStrategy,\n    focusableElementFilter: element => element.getAttribute('role') === 'tab'\n  }, [isInsideMenu]);\n  return /*#__PURE__*/React__default.createElement(TabNavBase, _extends({}, rest, {\n    ref: navRef\n  }), /*#__PURE__*/React__default.createElement(TabNavNav, {\n    \"aria-label\": ariaLabel\n  }, /*#__PURE__*/React__default.createElement(TabNavTabList, {\n    role: \"tablist\"\n  }, children)));\n}\nTabNav.displayName = \"TabNav\";\nconst TabNavLink = styled.a.attrs(props => ({\n  activeClassName: typeof props.to === 'string' ? 'selected' : undefined,\n  className: classnames(ITEM_CLASS, props.selected && SELECTED_CLASS, props.className),\n  role: 'tab',\n  'aria-selected': !!props.selected,\n  tabIndex: -1\n})).withConfig({\n  displayName: \"TabNav__TabNavLink\",\n  componentId: \"sc-pwdi4r-3\"\n})([\"padding:8px 12px;font-size:\", \";line-height:20px;color:\", \";text-decoration:none;background-color:transparent;border:1px solid transparent;border-bottom:0;\", \";&:hover,&:focus{color:\", \";text-decoration:none;}&.selected{color:\", \";border-color:\", \";border-top-right-radius:\", \";border-top-left-radius:\", \";background-color:\", \";}\", \";\"], get('fontSizes.1'), get('colors.fg.default'), getGlobalFocusStyles('-6px'), get('colors.fg.default'), get('colors.fg.default'), get('colors.border.default'), get('radii.2'), get('radii.2'), get('colors.canvas.default'), sx);\nTabNavLink.displayName = 'TabNav.Link';\nvar TabNav$1 = Object.assign(TabNav, {\n  Link: TabNavLink\n});\nexport { TabNav$1 as default };","map":{"version":3,"names":["classnames","React__default","useRef","useState","styled","get","useFocusZone","sx","getGlobalFocusStyles","FocusKeys","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","ITEM_CLASS","SELECTED_CLASS","TabNavBase","div","withConfig","displayName","componentId","TabNavTabList","TabNavNav","nav","TabNav","_ref2","children","ariaLabel","rest","customContainerRef","isInsideMenu","setIsInsideMenu","useEffect","current","menu","closest","customStrategy","useCallback","_customContainerRef$c","_customContainerRef$c2","_ref","selectedTab","querySelector","firstTab","undefined","containerRef","navRef","bindKeys","ArrowHorizontal","HomeAndEnd","focusOutBehavior","focusInStrategy","focusableElementFilter","element","getAttribute","createElement","ref","role","TabNavLink","a","attrs","props","activeClassName","to","className","selected","tabIndex","TabNav$1","Link","default"],"sources":["/home/muneeb/assignment-krayo/frontend/node_modules/@primer/react/lib-esm/TabNav/TabNav.js"],"sourcesContent":["import classnames from 'classnames';\nimport React__default, { useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { get } from '../constants.js';\nimport { useFocusZone } from '../hooks/useFocusZone.js';\nimport sx from '../sx.js';\nimport getGlobalFocusStyles from '../_getGlobalFocusStyles.js';\nimport { FocusKeys } from '@primer/behaviors';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nconst ITEM_CLASS = 'TabNav-item';\nconst SELECTED_CLASS = 'selected';\nconst TabNavBase = styled.div.withConfig({\n  displayName: \"TabNav__TabNavBase\",\n  componentId: \"sc-pwdi4r-0\"\n})([\"\", \"\"], sx);\nconst TabNavTabList = styled.div.withConfig({\n  displayName: \"TabNav__TabNavTabList\",\n  componentId: \"sc-pwdi4r-1\"\n})([\"display:flex;margin-bottom:-1px;overflow:auto;\"]);\nconst TabNavNav = styled.nav.withConfig({\n  displayName: \"TabNav__TabNavNav\",\n  componentId: \"sc-pwdi4r-2\"\n})([\"margin-top:0;border-bottom:1px solid \", \";\"], get('colors.border.default'));\nfunction TabNav({\n  children,\n  'aria-label': ariaLabel,\n  ...rest\n}) {\n  const customContainerRef = useRef(null);\n\n  // Detect if the TabNav is inside an ActionMenu.\n  const [isInsideMenu, setIsInsideMenu] = useState(false);\n  React__default.useEffect(() => {\n    if (customContainerRef.current) {\n      const menu = customContainerRef.current.closest('[role=menu]');\n      if (menu) {\n        setIsInsideMenu(true);\n      }\n    }\n  }, [customContainerRef]);\n  const customStrategy = React__default.useCallback(() => {\n    var _customContainerRef$c, _customContainerRef$c2, _ref;\n    const selectedTab = (_customContainerRef$c = customContainerRef.current) === null || _customContainerRef$c === void 0 ? void 0 : _customContainerRef$c.querySelector('[role=tab][aria-selected=true]');\n    const firstTab = (_customContainerRef$c2 = customContainerRef.current) === null || _customContainerRef$c2 === void 0 ? void 0 : _customContainerRef$c2.querySelector('[role=tab]');\n    return (_ref = selectedTab !== null && selectedTab !== void 0 ? selectedTab : firstTab) !== null && _ref !== void 0 ? _ref : undefined;\n  }, [customContainerRef]);\n  const {\n    containerRef: navRef\n  } = useFocusZone({\n    containerRef: customContainerRef,\n    bindKeys: FocusKeys.ArrowHorizontal | FocusKeys.HomeAndEnd,\n    focusOutBehavior: 'wrap',\n    // Use 'previous' strategy when inside an ActionMenu to avoid\n    // conflicting with the ActionMenu's focus zone.\n    //\n    // WARNING: We don't recommend using TabNav inside an ActionMenu.\n    // This is a workaround to avoid breaking existing code.\n    focusInStrategy: isInsideMenu ? 'previous' : customStrategy,\n    focusableElementFilter: element => element.getAttribute('role') === 'tab'\n  }, [isInsideMenu]);\n  return /*#__PURE__*/React__default.createElement(TabNavBase, _extends({}, rest, {\n    ref: navRef\n  }), /*#__PURE__*/React__default.createElement(TabNavNav, {\n    \"aria-label\": ariaLabel\n  }, /*#__PURE__*/React__default.createElement(TabNavTabList, {\n    role: \"tablist\"\n  }, children)));\n}\nTabNav.displayName = \"TabNav\";\nconst TabNavLink = styled.a.attrs(props => ({\n  activeClassName: typeof props.to === 'string' ? 'selected' : undefined,\n  className: classnames(ITEM_CLASS, props.selected && SELECTED_CLASS, props.className),\n  role: 'tab',\n  'aria-selected': !!props.selected,\n  tabIndex: -1\n})).withConfig({\n  displayName: \"TabNav__TabNavLink\",\n  componentId: \"sc-pwdi4r-3\"\n})([\"padding:8px 12px;font-size:\", \";line-height:20px;color:\", \";text-decoration:none;background-color:transparent;border:1px solid transparent;border-bottom:0;\", \";&:hover,&:focus{color:\", \";text-decoration:none;}&.selected{color:\", \";border-color:\", \";border-top-right-radius:\", \";border-top-left-radius:\", \";background-color:\", \";}\", \";\"], get('fontSizes.1'), get('colors.fg.default'), getGlobalFocusStyles('-6px'), get('colors.fg.default'), get('colors.fg.default'), get('colors.border.default'), get('radii.2'), get('radii.2'), get('colors.canvas.default'), sx);\nTabNavLink.displayName = 'TabNav.Link';\nvar TabNav$1 = Object.assign(TabNav, {\n  Link: TabNavLink\n});\n\nexport { TabNav$1 as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}